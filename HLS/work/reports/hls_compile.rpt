

================================================================
== Synthesis Summary Report of 'LinearImageFilter'
================================================================
+ General Information: 
    * Date:           Wed May  8 18:24:02 2024
    * Version:        2023.2.2 (Build 4101106 on Feb  9 2024)
    * Project:        work
    * Solution:       hls (Vivado IP Flow Target)
    * Product family: zynq
    * Target device:  xc7z020-clg400-1
    

+ Performance & Resource Estimates: 
    
    PS: '+' for module; 'o' for loop; '*' for dataflow
    +-------------------------------------------------------------+------+------+---------+--------+----------+---------+------+----------+---------+---------+-----------+------------+-----+
    |                           Modules                           | Issue|      | Latency | Latency| Iteration|         | Trip |          |         |         |           |            |     |
    |                           & Loops                           | Type | Slack| (cycles)|  (ns)  |  Latency | Interval| Count| Pipelined|  BRAM   |   DSP   |     FF    |     LUT    | URAM|
    +-------------------------------------------------------------+------+------+---------+--------+----------+---------+------+----------+---------+---------+-----------+------------+-----+
    |+ LinearImageFilter                                          |     -|  0.00|        -|       -|         -|        -|     -|        no|  12 (4%)|  15 (6%)|  7020 (6%)|  7027 (13%)|    -|
    | o rows_loop                                                 |     -|  7.30|        -|       -|         -|        -|     -|        no|        -|        -|          -|           -|    -|
    |  o cols_loop                                                |     -|  7.30|        -|       -|         -|        -|     -|        no|        -|        -|          -|           -|    -|
    |   + LinearImageFilter_Pipeline_ker_rows_loop_ker_cols_loop  |     -|  0.00|        -|       -|         -|        -|     -|        no|        -|   8 (3%)|  1674 (1%)|   2541 (4%)|    -|
    |    o ker_rows_loop_ker_cols_loop                            |    II|  7.30|        -|       -|        26|        5|     -|       yes|        -|        -|          -|           -|    -|
    +-------------------------------------------------------------+------+------+---------+--------+----------+---------+------+----------+---------+---------+-----------+------------+-----+


================================================================
== HW Interfaces
================================================================
* M_AXI
+-----------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+-------------------+
| Interface       | Data Width | Address Width | Latency | Offset | Register | Max Widen | Max Read     | Max Write    | Num Read    | Num Write   | Resource Estimate |
|                 | (SW->HW)   |               |         |        |          | Bitwidth  | Burst Length | Burst Length | Outstanding | Outstanding |                   |
+-----------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+-------------------+
| m_axi_image_in  | 32 -> 32   | 32            | 0       | slave  | 0        | 0         | 16           | 16           | 16          | 16          | BRAM=4            |
| m_axi_image_out | 32 -> 32   | 32            | 0       | slave  | 0        | 0         | 16           | 16           | 16          | 16          | BRAM=4            |
| m_axi_kernel    | 32 -> 32   | 32            | 0       | slave  | 0        | 0         | 16           | 16           | 16          | 16          | BRAM=4            |
+-----------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+-------------------+

* S_AXILITE Interfaces
+---------------+------------+---------------+--------+----------+
| Interface     | Data Width | Address Width | Offset | Register |
+---------------+------------+---------------+--------+----------+
| s_axi_control | 32         | 7             | 16     | 0        |
+---------------+------------+---------------+--------+----------+

* S_AXILITE Registers
+---------------+------------------+--------+-------+--------+----------------------------------+----------------------------------------------------------------------+
| Interface     | Register         | Offset | Width | Access | Description                      | Bit Fields                                                           |
+---------------+------------------+--------+-------+--------+----------------------------------+----------------------------------------------------------------------+
| s_axi_control | CTRL             | 0x00   | 32    | RW     | Control signals                  | 0=AP_START 1=AP_DONE 2=AP_IDLE 3=AP_READY 7=AUTO_RESTART 9=INTERRUPT |
| s_axi_control | GIER             | 0x04   | 32    | RW     | Global Interrupt Enable Register | 0=Enable                                                             |
| s_axi_control | IP_IER           | 0x08   | 32    | RW     | IP Interrupt Enable Register     | 0=CHAN0_INT_EN 1=CHAN1_INT_EN                                        |
| s_axi_control | IP_ISR           | 0x0c   | 32    | RW     | IP Interrupt Status Register     | 0=CHAN0_INT_ST 1=CHAN1_INT_ST                                        |
| s_axi_control | image_out_offset | 0x10   | 32    | W      | Data signal of image_out_offset  |                                                                      |
| s_axi_control | image_in_offset  | 0x18   | 32    | W      | Data signal of image_in_offset   |                                                                      |
| s_axi_control | rows             | 0x20   | 32    | W      | Data signal of rows              |                                                                      |
| s_axi_control | cols             | 0x28   | 32    | W      | Data signal of cols              |                                                                      |
| s_axi_control | kernel_offset    | 0x30   | 32    | W      | Data signal of kernel_offset     |                                                                      |
| s_axi_control | kernel_size_r    | 0x38   | 32    | W      | Data signal of kernel_size_r     |                                                                      |
| s_axi_control | stride_row       | 0x40   | 32    | W      | Data signal of stride_row        |                                                                      |
| s_axi_control | stride_col       | 0x48   | 32    | W      | Data signal of stride_col        |                                                                      |
| s_axi_control | padding          | 0x50   | 32    | W      | Data signal of padding           |                                                                      |
+---------------+------------------+--------+-------+--------+----------------------------------+----------------------------------------------------------------------+

* TOP LEVEL CONTROL
+-----------+------------+-----------+
| Interface | Type       | Ports     |
+-----------+------------+-----------+
| ap_clk    | clock      | ap_clk    |
| ap_rst_n  | reset      | ap_rst_n  |
| interrupt | interrupt  | interrupt |
| ap_ctrl   | ap_ctrl_hs |           |
+-----------+------------+-----------+


================================================================
== SW I/O Information
================================================================
* Top Function Arguments
+-------------+-----------+----------------------+
| Argument    | Direction | Datatype             |
+-------------+-----------+----------------------+
| image_out   | out       | float* const         |
| image_in    | in        | float const * const  |
| rows        | in        | unsigned int const   |
| cols        | in        | unsigned int const   |
| kernel      | in        | float const * const  |
| kernel_size | in        | unsigned int const   |
| stride_row  | in        | unsigned int const   |
| stride_col  | in        | unsigned int const   |
| padding     | in        | Padding const        |
+-------------+-----------+----------------------+

* SW-to-HW Mapping
+-------------+-----------------+-----------+----------+-----------------------------------------+
| Argument    | HW Interface    | HW Type   | HW Usage | HW Info                                 |
+-------------+-----------------+-----------+----------+-----------------------------------------+
| image_out   | m_axi_image_out | interface |          |                                         |
| image_out   | s_axi_control   | interface | offset   |                                         |
| image_in    | m_axi_image_in  | interface |          |                                         |
| image_in    | s_axi_control   | interface | offset   |                                         |
| rows        | s_axi_control   | register  |          | name=rows offset=0x20 range=32          |
| cols        | s_axi_control   | register  |          | name=cols offset=0x28 range=32          |
| kernel      | m_axi_kernel    | interface |          |                                         |
| kernel      | s_axi_control   | interface | offset   |                                         |
| kernel_size | s_axi_control   | register  |          | name=kernel_size_r offset=0x38 range=32 |
| stride_row  | s_axi_control   | register  |          | name=stride_row offset=0x40 range=32    |
| stride_col  | s_axi_control   | register  |          | name=stride_col offset=0x48 range=32    |
| padding     | s_axi_control   | register  |          | name=padding offset=0x50 range=32       |
+-------------+-----------------+-----------+----------+-----------------------------------------+


================================================================
== M_AXI Burst Information
================================================================
 Note: All burst requests might be further partitioned into multiple requests during RTL generation based on max_read_burst_length or max_write_burst_length settings.

* All M_AXI Variable Accesses
+----------------+----------+-----------------------------------------------------------------------------+-----------+--------------+---------------+-----------------------------------------------------------------------------+------------+------------------------------------------+
| HW Interface   | Variable | Access Location                                                             | Direction | Burst Status | Loop          | Loop Location                                                               | Resolution | Problem                                  |
+----------------+----------+-----------------------------------------------------------------------------+-----------+--------------+---------------+-----------------------------------------------------------------------------+------------+------------------------------------------+
| m_axi_image_in | image_in | /home/cristian/Documents/ACES/RC-Project/HLS/LinearImageFiltering.cpp:39:28 | read      | Fail         | ker_cols_loop | /home/cristian/Documents/ACES/RC-Project/HLS/LinearImageFiltering.cpp:29:32 | 214-232    | Access load is in the conditional branch |
| m_axi_kernel   | kernel   | /home/cristian/Documents/ACES/RC-Project/HLS/LinearImageFiltering.cpp:39:63 | read      | Fail         | ker_cols_loop | /home/cristian/Documents/ACES/RC-Project/HLS/LinearImageFiltering.cpp:29:32 | 214-232    | Access load is in the conditional branch |
+----------------+----------+-----------------------------------------------------------------------------+-----------+--------------+---------------+-----------------------------------------------------------------------------+------------+------------------------------------------+

    * Resolution URL: docs.xilinx.com/access/sources/dita/topic?Doc_Version=2023.2%20English&url=ug1448-hls-guidance&resourceid=XXX-YYY.html (replace XXX-YYY with column value)

================================================================
== Bind Op Report
================================================================
+-----------------------------------------------------------+-----+--------+------------+------+---------+---------+
| Name                                                      | DSP | Pragma | Variable   | Op   | Impl    | Latency |
+-----------------------------------------------------------+-----+--------+------------+------+---------+---------+
| + LinearImageFilter                                       | 15  |        |            |      |         |         |
|   sub_i_fu_282_p2                                         |     |        | sub_i      | add  | fabric  | 0       |
|   sub16_i_fu_287_p2                                       |     |        | sub16_i    | add  | fabric  | 0       |
|   mul_32ns_32ns_64_2_1_U26                                | 4   |        | mul_ln7    | mul  | auto    | 1       |
|   add_fu_314_p2                                           |     |        | add        | sub  | fabric  | 0       |
|   mul_32s_32s_32_2_1_U27                                  | 3   |        | mul_ln43   | mul  | auto    | 1       |
|   add_ln43_fu_358_p2                                      |     |        | add_ln43   | add  | fabric  | 0       |
|   add_ln43_1_fu_371_p2                                    |     |        | add_ln43_1 | add  | fabric  | 0       |
|   col_1_fu_333_p2                                         |     |        | col_1      | add  | fabric  | 0       |
|   row_3_fu_338_p2                                         |     |        | row_3      | add  | fabric  | 0       |
|  + LinearImageFilter_Pipeline_ker_rows_loop_ker_cols_loop | 8   |        |            |      |         |         |
|    add_ln27_fu_322_p2                                     |     |        | add_ln27   | add  | fabric  | 0       |
|    add_ln27_1_fu_339_p2                                   |     |        | add_ln27_1 | add  | fabric  | 0       |
|    newRow_fu_359_p2                                       |     |        | newRow     | add  | fabric  | 0       |
|    neg_fu_479_p2                                          |     |        | neg        | sub  | fabric  | 0       |
|    newRow_3_fu_496_p2                                     |     |        | newRow_3   | add  | fabric  | 0       |
|    neg1_fu_512_p2                                         |     |        | neg1       | sub  | fabric  | 0       |
|    newCol_2_fu_529_p2                                     |     |        | newCol_2   | add  | fabric  | 0       |
|    mul_30s_30s_30_2_1_U3                                  | 3   |        | mul_ln39   | mul  | auto    | 1       |
|    add_ln39_fu_677_p2                                     |     |        | add_ln39   | add  | fabric  | 0       |
|    add_ln39_1_fu_690_p2                                   |     |        | add_ln39_1 | add  | fabric  | 0       |
|    add_ln39_2_fu_621_p2                                   |     |        | add_ln39_2 | add  | fabric  | 0       |
|    add_ln39_3_fu_634_p2                                   |     |        | add_ln39_3 | add  | fabric  | 0       |
|    fmul_32ns_32ns_32_4_max_dsp_1_U2                       | 3   |        | mul        | fmul | maxdsp  | 3       |
|    fadd_32ns_32ns_32_5_full_dsp_1_U1                      | 2   |        | sum_1      | fadd | fulldsp | 4       |
|    add_ln29_fu_659_p2                                     |     |        | add_ln29   | add  | fabric  | 0       |
+-----------------------------------------------------------+-----+--------+------------+------+---------+---------+


================================================================
== Storage Report
================================================================
+---------------------+-----------+-----------+------+------+--------+----------+------+---------+------------------+
| Name                | Usage     | Type      | BRAM | URAM | Pragma | Variable | Impl | Latency | Bitwidth, Depth, |
|                     |           |           |      |      |        |          |      |         | Banks            |
+---------------------+-----------+-----------+------+------+--------+----------+------+---------+------------------+
| + LinearImageFilter |           |           | 12   | 0    |        |          |      |         |                  |
|   control_s_axi_U   | interface | s_axilite |      |      |        |          |      |         |                  |
|   image_in_m_axi_U  | interface | m_axi     | 4    |      |        |          |      |         |                  |
|   image_out_m_axi_U | interface | m_axi     | 4    |      |        |          |      |         |                  |
|   kernel_m_axi_U    | interface | m_axi     | 4    |      |        |          |      |         |                  |
+---------------------+-----------+-----------+------+------+--------+----------+------+---------+------------------+


================================================================
== Pragma Report
================================================================
* Valid Pragma Syntax
+-----------+-----------------------------------------------------------------+--------------------------------------------------+
| Type      | Options                                                         | Location                                         |
+-----------+-----------------------------------------------------------------+--------------------------------------------------+
| interface | mode = m_axi port = image_out bundle = image_out offset = slave | LinearImageFiltering.cpp:9 in linearimagefilter  |
| interface | mode = m_axi port = image_in bundle = image_in offset = slave   | LinearImageFiltering.cpp:10 in linearimagefilter |
| interface | mode = m_axi port = kernel bundle = kernel offset = slave       | LinearImageFiltering.cpp:11 in linearimagefilter |
| interface | mode = s_axilite port = rows                                    | LinearImageFiltering.cpp:13 in linearimagefilter |
| interface | mode = s_axilite port = cols                                    | LinearImageFiltering.cpp:14 in linearimagefilter |
| interface | mode = s_axilite port = kernel_size                             | LinearImageFiltering.cpp:15 in linearimagefilter |
| interface | mode = s_axilite port = stride_row                              | LinearImageFiltering.cpp:16 in linearimagefilter |
| interface | mode = s_axilite port = stride_col                              | LinearImageFiltering.cpp:17 in linearimagefilter |
| interface | mode = s_axilite port = padding                                 | LinearImageFiltering.cpp:18 in linearimagefilter |
| interface | mode = s_axilite port = return                                  | LinearImageFiltering.cpp:19 in linearimagefilter |
+-----------+-----------------------------------------------------------------+--------------------------------------------------+


