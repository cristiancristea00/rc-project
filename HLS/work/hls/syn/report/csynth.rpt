

================================================================
== Synthesis Summary Report of 'LinearImageFilter'
================================================================
+ General Information: 
    * Date:           Thu May 30 20:38:02 2024
    * Version:        2023.2.2 (Build 4101106 on Feb  9 2024)
    * Project:        work
    * Solution:       hls (Vivado IP Flow Target)
    * Product family: zynq
    * Target device:  xc7z020-clg400-1
    

+ Performance & Resource Estimates: 
    
    PS: '+' for module; 'o' for loop; '*' for dataflow
    +---------------------------------------------------+------+------+---------+--------+----------+---------+------+----------+---------+---------+-----------+------------+-----+
    |                      Modules                      | Issue|      | Latency | Latency| Iteration|         | Trip |          |         |         |           |            |     |
    |                      & Loops                      | Type | Slack| (cycles)|  (ns)  |  Latency | Interval| Count| Pipelined|  BRAM   |   DSP   |     FF    |     LUT    | URAM|
    +---------------------------------------------------+------+------+---------+--------+----------+---------+------+----------+---------+---------+-----------+------------+-----+
    |+ LinearImageFilter                                |     -|  0.00|        -|       -|         -|        -|     -|        no|  12 (4%)|  15 (6%)|  6993 (6%)|  6836 (12%)|    -|
    | o img_rows                                        |     -|  7.30|        -|       -|         -|        -|     -|        no|        -|        -|          -|           -|    -|
    |  o img_cols                                       |     -|  7.30|        -|       -|         -|        -|     -|        no|        -|        -|          -|           -|    -|
    |   + LinearImageFilter_Pipeline_ker_rows_ker_cols  |     -|  0.00|        -|       -|         -|        -|     -|        no|        -|   8 (3%)|  1678 (1%)|   2568 (4%)|    -|
    |    o ker_rows_ker_cols                            |    II|  7.30|        -|       -|        26|        5|     -|       yes|        -|        -|          -|           -|    -|
    +---------------------------------------------------+------+------+---------+--------+----------+---------+------+----------+---------+---------+-----------+------------+-----+


================================================================
== HW Interfaces
================================================================
* M_AXI
+-----------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+----------------------------------------+-------------------+
| Interface       | Data Width | Address Width | Latency | Offset | Register | Max Widen | Max Read     | Max Write    | Num Read    | Num Write   | Cache Info                             | Resource Estimate |
|                 | (SW->HW)   |               |         |        |          | Bitwidth  | Burst Length | Burst Length | Outstanding | Outstanding |                                        |                   |
+-----------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+----------------------------------------+-------------------+
| m_axi_image_in  | 32 -> 32   | 32            | 0       | slave  | 0        | 0         | 16           | 16           | 16          | 16          | 256 lines of 512  byte(s), 32 bitwidth | BRAM=4            |
| m_axi_image_out | 32 -> 32   | 32            | 0       | slave  | 0        | 0         | 16           | 16           | 16          | 16          |                                        | BRAM=4            |
| m_axi_kernel    | 32 -> 32   | 32            | 0       | slave  | 0        | 0         | 16           | 16           | 16          | 16          | 1 lines of 512  byte(s), 32 bitwidth   | BRAM=4            |
+-----------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+----------------------------------------+-------------------+

* S_AXILITE Interfaces
+---------------+------------+---------------+--------+----------+
| Interface     | Data Width | Address Width | Offset | Register |
+---------------+------------+---------------+--------+----------+
| s_axi_control | 32         | 7             | 16     | 0        |
+---------------+------------+---------------+--------+----------+

* S_AXILITE Registers
+---------------+------------------+--------+-------+--------+----------------------------------+----------------------------------------------------------------------+
| Interface     | Register         | Offset | Width | Access | Description                      | Bit Fields                                                           |
+---------------+------------------+--------+-------+--------+----------------------------------+----------------------------------------------------------------------+
| s_axi_control | CTRL             | 0x00   | 32    | RW     | Control signals                  | 0=AP_START 1=AP_DONE 2=AP_IDLE 3=AP_READY 7=AUTO_RESTART 9=INTERRUPT |
| s_axi_control | GIER             | 0x04   | 32    | RW     | Global Interrupt Enable Register | 0=Enable                                                             |
| s_axi_control | IP_IER           | 0x08   | 32    | RW     | IP Interrupt Enable Register     | 0=CHAN0_INT_EN 1=CHAN1_INT_EN                                        |
| s_axi_control | IP_ISR           | 0x0c   | 32    | RW     | IP Interrupt Status Register     | 0=CHAN0_INT_ST 1=CHAN1_INT_ST                                        |
| s_axi_control | image_out_offset | 0x10   | 32    | W      | Data signal of image_out_offset  |                                                                      |
| s_axi_control | image_in_offset  | 0x18   | 32    | W      | Data signal of image_in_offset   |                                                                      |
| s_axi_control | rows             | 0x20   | 32    | W      | Data signal of rows              |                                                                      |
| s_axi_control | cols             | 0x28   | 32    | W      | Data signal of cols              |                                                                      |
| s_axi_control | kernel_offset    | 0x30   | 32    | W      | Data signal of kernel_offset     |                                                                      |
| s_axi_control | kernel_dim       | 0x38   | 32    | W      | Data signal of kernel_dim        |                                                                      |
| s_axi_control | stride_row       | 0x40   | 32    | W      | Data signal of stride_row        |                                                                      |
| s_axi_control | stride_col       | 0x48   | 32    | W      | Data signal of stride_col        |                                                                      |
| s_axi_control | padding          | 0x50   | 32    | W      | Data signal of padding           |                                                                      |
+---------------+------------------+--------+-------+--------+----------------------------------+----------------------------------------------------------------------+

* TOP LEVEL CONTROL
+-----------+------------+-----------+
| Interface | Type       | Ports     |
+-----------+------------+-----------+
| ap_clk    | clock      | ap_clk    |
| ap_rst_n  | reset      | ap_rst_n  |
| interrupt | interrupt  | interrupt |
| ap_ctrl   | ap_ctrl_hs |           |
+-----------+------------+-----------+


================================================================
== SW I/O Information
================================================================
* Top Function Arguments
+------------+-----------+----------------------+
| Argument   | Direction | Datatype             |
+------------+-----------+----------------------+
| image_out  | out       | float* const         |
| image_in   | in        | float const * const  |
| rows       | in        | unsigned int const   |
| cols       | in        | unsigned int const   |
| kernel     | in        | float const * const  |
| kernel_dim | in        | unsigned int const   |
| stride_row | in        | unsigned int const   |
| stride_col | in        | unsigned int const   |
| padding    | in        | Padding const        |
+------------+-----------+----------------------+

* SW-to-HW Mapping
+------------+-----------------+-----------+----------+--------------------------------------+
| Argument   | HW Interface    | HW Type   | HW Usage | HW Info                              |
+------------+-----------------+-----------+----------+--------------------------------------+
| image_out  | m_axi_image_out | interface |          |                                      |
| image_out  | s_axi_control   | interface | offset   |                                      |
| image_in   | m_axi_image_in  | interface |          |                                      |
| image_in   | s_axi_control   | interface | offset   |                                      |
| rows       | s_axi_control   | register  |          | name=rows offset=0x20 range=32       |
| cols       | s_axi_control   | register  |          | name=cols offset=0x28 range=32       |
| kernel     | m_axi_kernel    | interface |          |                                      |
| kernel     | s_axi_control   | interface | offset   |                                      |
| kernel_dim | s_axi_control   | register  |          | name=kernel_dim offset=0x38 range=32 |
| stride_row | s_axi_control   | register  |          | name=stride_row offset=0x40 range=32 |
| stride_col | s_axi_control   | register  |          | name=stride_col offset=0x48 range=32 |
| padding    | s_axi_control   | register  |          | name=padding offset=0x50 range=32    |
+------------+-----------------+-----------+----------+--------------------------------------+


================================================================
== M_AXI Burst Information
================================================================
 Note: All burst requests might be further partitioned into multiple requests during RTL generation based on max_read_burst_length or max_write_burst_length settings.

* All M_AXI Variable Accesses
+----------------+----------+---------------------------------------------------------------------------+-----------+--------------+------------+------------------------------------------------------------------------------------------------------------------------------------+
| HW Interface   | Variable | Access Location                                                           | Direction | Burst Status | Resolution | Problem                                                                                                                            |
+----------------+----------+---------------------------------------------------------------------------+-----------+--------------+------------+------------------------------------------------------------------------------------------------------------------------------------+
| m_axi_image_in | image_in | /home/cristi/Documents/ACES/RC-Project/HLS/LinearImageFiltering.cpp:49:28 | read      | Fail         | 214-417    | Using a cache line to infer a burst is less efficient in terms of resources than writing the code to automatically infer the burst |
| m_axi_kernel   | kernel   | /home/cristi/Documents/ACES/RC-Project/HLS/LinearImageFiltering.cpp:49:63 | read      | Fail         | 214-417    | Using a cache line to infer a burst is less efficient in terms of resources than writing the code to automatically infer the burst |
+----------------+----------+---------------------------------------------------------------------------+-----------+--------------+------------+------------------------------------------------------------------------------------------------------------------------------------+

    * Resolution URL: docs.xilinx.com/access/sources/dita/topic?Doc_Version=2023.2%20English&url=ug1448-hls-guidance&resourceid=XXX-YYY.html (replace XXX-YYY with column value)

================================================================
== Bind Op Report
================================================================
+-------------------------------------------------+-----+--------+------------+------+---------+---------+
| Name                                            | DSP | Pragma | Variable   | Op   | Impl    | Latency |
+-------------------------------------------------+-----+--------+------------+------+---------+---------+
| + LinearImageFilter                             | 15  |        |            |      |         |         |
|   newRow_4_fu_292_p2                            |     |        | newRow_4   | add  | fabric  | 0       |
|   newCol_2_fu_304_p2                            |     |        | newCol_2   | add  | fabric  | 0       |
|   mul_32s_32s_32_2_1_U27                        | 4   |        | mul_ln7    | mul  | auto    | 1       |
|   add_fu_324_p2                                 |     |        | add        | sub  | fabric  | 0       |
|   mul_32s_32s_32_2_1_U27                        | 3   |        | mul_ln53   | mul  | auto    | 1       |
|   out_idx_fu_368_p2                             |     |        | out_idx    | add  | fabric  | 0       |
|   add_ln54_fu_381_p2                            |     |        | add_ln54   | add  | fabric  | 0       |
|   col_1_fu_347_p2                               |     |        | col_1      | add  | fabric  | 0       |
|   row_3_fu_352_p2                               |     |        | row_3      | add  | fabric  | 0       |
|  + LinearImageFilter_Pipeline_ker_rows_ker_cols | 8   |        |            |      |         |         |
|    add_ln37_fu_328_p2                           |     |        | add_ln37   | add  | fabric  | 0       |
|    add_ln37_1_fu_345_p2                         |     |        | add_ln37_1 | add  | fabric  | 0       |
|    newRow_fu_365_p2                             |     |        | newRow     | add  | fabric  | 0       |
|    neg_fu_485_p2                                |     |        | neg        | sub  | fabric  | 0       |
|    newRow_5_fu_502_p2                           |     |        | newRow_5   | add  | fabric  | 0       |
|    neg1_fu_518_p2                               |     |        | neg1       | sub  | fabric  | 0       |
|    newCol_4_fu_535_p2                           |     |        | newCol_4   | add  | fabric  | 0       |
|    mul_30s_30s_30_2_1_U3                        | 3   |        | mul_ln49   | mul  | auto    | 1       |
|    add_ln49_fu_696_p2                           |     |        | add_ln49   | add  | fabric  | 0       |
|    add_ln49_1_fu_709_p2                         |     |        | add_ln49_1 | add  | fabric  | 0       |
|    add_ln49_2_fu_640_p2                         |     |        | add_ln49_2 | add  | fabric  | 0       |
|    add_ln49_3_fu_653_p2                         |     |        | add_ln49_3 | add  | fabric  | 0       |
|    fmul_32ns_32ns_32_4_max_dsp_1_U2             | 3   |        | mul        | fmul | maxdsp  | 3       |
|    fadd_32ns_32ns_32_5_full_dsp_1_U1            | 2   |        | sum_1      | fadd | fulldsp | 4       |
|    add_ln39_fu_678_p2                           |     |        | add_ln39   | add  | fabric  | 0       |
+-------------------------------------------------+-----+--------+------------+------+---------+---------+


================================================================
== Storage Report
================================================================
+---------------------+-----------+-----------+------+------+--------+----------+------+---------+------------------+
| Name                | Usage     | Type      | BRAM | URAM | Pragma | Variable | Impl | Latency | Bitwidth, Depth, |
|                     |           |           |      |      |        |          |      |         | Banks            |
+---------------------+-----------+-----------+------+------+--------+----------+------+---------+------------------+
| + LinearImageFilter |           |           | 12   | 0    |        |          |      |         |                  |
|   control_s_axi_U   | interface | s_axilite |      |      |        |          |      |         |                  |
|   image_in_m_axi_U  | interface | m_axi     | 4    |      |        |          |      |         |                  |
|   image_out_m_axi_U | interface | m_axi     | 4    |      |        |          |      |         |                  |
|   kernel_m_axi_U    | interface | m_axi     | 4    |      |        |          |      |         |                  |
+---------------------+-----------+-----------+------+------+--------+----------+------+---------+------------------+


================================================================
== Pragma Report
================================================================
* Valid Pragma Syntax
+-----------+----------------------------------------------------------------------------------+--------------------------------------------------+
| Type      | Options                                                                          | Location                                         |
+-----------+----------------------------------------------------------------------------------+--------------------------------------------------+
| interface | mode = m_axi port = image_out bundle = image_out offset = slave depth = 10000000 | LinearImageFiltering.cpp:9 in linearimagefilter  |
| interface | mode = m_axi port = image_in bundle = image_in offset = slave depth = 10000000   | LinearImageFiltering.cpp:10 in linearimagefilter |
| interface | mode = m_axi port = kernel bundle = kernel offset = slave depth = 1000           | LinearImageFiltering.cpp:11 in linearimagefilter |
| interface | mode = s_axilite port = rows                                                     | LinearImageFiltering.cpp:13 in linearimagefilter |
| interface | mode = s_axilite port = cols                                                     | LinearImageFiltering.cpp:14 in linearimagefilter |
| interface | mode = s_axilite port = kernel_dim                                               | LinearImageFiltering.cpp:15 in linearimagefilter |
| interface | mode = s_axilite port = stride_row                                               | LinearImageFiltering.cpp:16 in linearimagefilter |
| interface | mode = s_axilite port = stride_col                                               | LinearImageFiltering.cpp:17 in linearimagefilter |
| interface | mode = s_axilite port = padding                                                  | LinearImageFiltering.cpp:18 in linearimagefilter |
| interface | mode = s_axilite port = return                                                   | LinearImageFiltering.cpp:19 in linearimagefilter |
| cache     | port = image_in depth = 128 lines = 256                                          | LinearImageFiltering.cpp:21 in linearimagefilter |
| cache     | port = kernel depth = 128 lines = 1                                              | LinearImageFiltering.cpp:22 in linearimagefilter |
| inline    |                                                                                  | LinearImageFiltering.cpp:61 in pad               |
+-----------+----------------------------------------------------------------------------------+--------------------------------------------------+


