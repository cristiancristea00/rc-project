#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("m_axi_image_out_AWVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_image_out_AWREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_image_out_AWADDR", 32, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_image_out_AWID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_image_out_AWLEN", 8, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_image_out_AWSIZE", 3, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_image_out_AWBURST", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_image_out_AWLOCK", 2, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_image_out_AWCACHE", 4, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_image_out_AWPROT", 3, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_image_out_AWQOS", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_image_out_AWREGION", 4, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_image_out_AWUSER", 1, hls_out, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_image_out_WVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_image_out_WREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_image_out_WDATA", 32, hls_out, 0, "m_axi", "FIFONUM", 1),
	Port_Property("m_axi_image_out_WSTRB", 4, hls_out, 0, "m_axi", "STRB", 1),
	Port_Property("m_axi_image_out_WLAST", 1, hls_out, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_image_out_WID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_image_out_WUSER", 1, hls_out, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_image_out_ARVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_image_out_ARREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_image_out_ARADDR", 32, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_image_out_ARID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_image_out_ARLEN", 8, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_image_out_ARSIZE", 3, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_image_out_ARBURST", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_image_out_ARLOCK", 2, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_image_out_ARCACHE", 4, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_image_out_ARPROT", 3, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_image_out_ARQOS", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_image_out_ARREGION", 4, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_image_out_ARUSER", 1, hls_out, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_image_out_RVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_image_out_RREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_image_out_RDATA", 32, hls_in, 0, "m_axi", "FIFONUM", 1),
	Port_Property("m_axi_image_out_RLAST", 1, hls_in, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_image_out_RID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_image_out_RUSER", 1, hls_in, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_image_out_RRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_image_out_BVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_image_out_BREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_image_out_BRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_image_out_BID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_image_out_BUSER", 1, hls_in, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_image_in_AWVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_image_in_AWREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_image_in_AWADDR", 32, hls_out, 1, "m_axi", "ADDR", 1),
	Port_Property("m_axi_image_in_AWID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_image_in_AWLEN", 8, hls_out, 1, "m_axi", "SIZE", 1),
	Port_Property("m_axi_image_in_AWSIZE", 3, hls_out, 1, "m_axi", "BURST", 1),
	Port_Property("m_axi_image_in_AWBURST", 2, hls_out, 1, "m_axi", "LOCK", 1),
	Port_Property("m_axi_image_in_AWLOCK", 2, hls_out, 1, "m_axi", "CACHE", 1),
	Port_Property("m_axi_image_in_AWCACHE", 4, hls_out, 1, "m_axi", "PROT", 1),
	Port_Property("m_axi_image_in_AWPROT", 3, hls_out, 1, "m_axi", "QOS", 1),
	Port_Property("m_axi_image_in_AWQOS", 4, hls_out, 1, "m_axi", "REGION", 1),
	Port_Property("m_axi_image_in_AWREGION", 4, hls_out, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_image_in_AWUSER", 1, hls_out, 1, "m_axi", "DATA", 1),
	Port_Property("m_axi_image_in_WVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_image_in_WREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_image_in_WDATA", 32, hls_out, 1, "m_axi", "FIFONUM", 1),
	Port_Property("m_axi_image_in_WSTRB", 4, hls_out, 1, "m_axi", "STRB", 1),
	Port_Property("m_axi_image_in_WLAST", 1, hls_out, 1, "m_axi", "LAST", 1),
	Port_Property("m_axi_image_in_WID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_image_in_WUSER", 1, hls_out, 1, "m_axi", "DATA", 1),
	Port_Property("m_axi_image_in_ARVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_image_in_ARREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_image_in_ARADDR", 32, hls_out, 1, "m_axi", "ADDR", 1),
	Port_Property("m_axi_image_in_ARID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_image_in_ARLEN", 8, hls_out, 1, "m_axi", "SIZE", 1),
	Port_Property("m_axi_image_in_ARSIZE", 3, hls_out, 1, "m_axi", "BURST", 1),
	Port_Property("m_axi_image_in_ARBURST", 2, hls_out, 1, "m_axi", "LOCK", 1),
	Port_Property("m_axi_image_in_ARLOCK", 2, hls_out, 1, "m_axi", "CACHE", 1),
	Port_Property("m_axi_image_in_ARCACHE", 4, hls_out, 1, "m_axi", "PROT", 1),
	Port_Property("m_axi_image_in_ARPROT", 3, hls_out, 1, "m_axi", "QOS", 1),
	Port_Property("m_axi_image_in_ARQOS", 4, hls_out, 1, "m_axi", "REGION", 1),
	Port_Property("m_axi_image_in_ARREGION", 4, hls_out, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_image_in_ARUSER", 1, hls_out, 1, "m_axi", "DATA", 1),
	Port_Property("m_axi_image_in_RVALID", 1, hls_in, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_image_in_RREADY", 1, hls_out, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_image_in_RDATA", 32, hls_in, 1, "m_axi", "FIFONUM", 1),
	Port_Property("m_axi_image_in_RLAST", 1, hls_in, 1, "m_axi", "LAST", 1),
	Port_Property("m_axi_image_in_RID", 1, hls_in, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_image_in_RUSER", 1, hls_in, 1, "m_axi", "DATA", 1),
	Port_Property("m_axi_image_in_RRESP", 2, hls_in, 1, "m_axi", "RESP", 1),
	Port_Property("m_axi_image_in_BVALID", 1, hls_in, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_image_in_BREADY", 1, hls_out, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_image_in_BRESP", 2, hls_in, 1, "m_axi", "RESP", 1),
	Port_Property("m_axi_image_in_BID", 1, hls_in, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_image_in_BUSER", 1, hls_in, 1, "m_axi", "DATA", 1),
	Port_Property("m_axi_kernel_AWVALID", 1, hls_out, 2, "m_axi", "VALID", 1),
	Port_Property("m_axi_kernel_AWREADY", 1, hls_in, 2, "m_axi", "READY", 1),
	Port_Property("m_axi_kernel_AWADDR", 32, hls_out, 2, "m_axi", "ADDR", 1),
	Port_Property("m_axi_kernel_AWID", 1, hls_out, 2, "m_axi", "ID", 1),
	Port_Property("m_axi_kernel_AWLEN", 8, hls_out, 2, "m_axi", "SIZE", 1),
	Port_Property("m_axi_kernel_AWSIZE", 3, hls_out, 2, "m_axi", "BURST", 1),
	Port_Property("m_axi_kernel_AWBURST", 2, hls_out, 2, "m_axi", "LOCK", 1),
	Port_Property("m_axi_kernel_AWLOCK", 2, hls_out, 2, "m_axi", "CACHE", 1),
	Port_Property("m_axi_kernel_AWCACHE", 4, hls_out, 2, "m_axi", "PROT", 1),
	Port_Property("m_axi_kernel_AWPROT", 3, hls_out, 2, "m_axi", "QOS", 1),
	Port_Property("m_axi_kernel_AWQOS", 4, hls_out, 2, "m_axi", "REGION", 1),
	Port_Property("m_axi_kernel_AWREGION", 4, hls_out, 2, "m_axi", "USER", 1),
	Port_Property("m_axi_kernel_AWUSER", 1, hls_out, 2, "m_axi", "DATA", 1),
	Port_Property("m_axi_kernel_WVALID", 1, hls_out, 2, "m_axi", "VALID", 1),
	Port_Property("m_axi_kernel_WREADY", 1, hls_in, 2, "m_axi", "READY", 1),
	Port_Property("m_axi_kernel_WDATA", 32, hls_out, 2, "m_axi", "FIFONUM", 1),
	Port_Property("m_axi_kernel_WSTRB", 4, hls_out, 2, "m_axi", "STRB", 1),
	Port_Property("m_axi_kernel_WLAST", 1, hls_out, 2, "m_axi", "LAST", 1),
	Port_Property("m_axi_kernel_WID", 1, hls_out, 2, "m_axi", "ID", 1),
	Port_Property("m_axi_kernel_WUSER", 1, hls_out, 2, "m_axi", "DATA", 1),
	Port_Property("m_axi_kernel_ARVALID", 1, hls_out, 2, "m_axi", "VALID", 1),
	Port_Property("m_axi_kernel_ARREADY", 1, hls_in, 2, "m_axi", "READY", 1),
	Port_Property("m_axi_kernel_ARADDR", 32, hls_out, 2, "m_axi", "ADDR", 1),
	Port_Property("m_axi_kernel_ARID", 1, hls_out, 2, "m_axi", "ID", 1),
	Port_Property("m_axi_kernel_ARLEN", 8, hls_out, 2, "m_axi", "SIZE", 1),
	Port_Property("m_axi_kernel_ARSIZE", 3, hls_out, 2, "m_axi", "BURST", 1),
	Port_Property("m_axi_kernel_ARBURST", 2, hls_out, 2, "m_axi", "LOCK", 1),
	Port_Property("m_axi_kernel_ARLOCK", 2, hls_out, 2, "m_axi", "CACHE", 1),
	Port_Property("m_axi_kernel_ARCACHE", 4, hls_out, 2, "m_axi", "PROT", 1),
	Port_Property("m_axi_kernel_ARPROT", 3, hls_out, 2, "m_axi", "QOS", 1),
	Port_Property("m_axi_kernel_ARQOS", 4, hls_out, 2, "m_axi", "REGION", 1),
	Port_Property("m_axi_kernel_ARREGION", 4, hls_out, 2, "m_axi", "USER", 1),
	Port_Property("m_axi_kernel_ARUSER", 1, hls_out, 2, "m_axi", "DATA", 1),
	Port_Property("m_axi_kernel_RVALID", 1, hls_in, 2, "m_axi", "VALID", 1),
	Port_Property("m_axi_kernel_RREADY", 1, hls_out, 2, "m_axi", "READY", 1),
	Port_Property("m_axi_kernel_RDATA", 32, hls_in, 2, "m_axi", "FIFONUM", 1),
	Port_Property("m_axi_kernel_RLAST", 1, hls_in, 2, "m_axi", "LAST", 1),
	Port_Property("m_axi_kernel_RID", 1, hls_in, 2, "m_axi", "ID", 1),
	Port_Property("m_axi_kernel_RUSER", 1, hls_in, 2, "m_axi", "DATA", 1),
	Port_Property("m_axi_kernel_RRESP", 2, hls_in, 2, "m_axi", "RESP", 1),
	Port_Property("m_axi_kernel_BVALID", 1, hls_in, 2, "m_axi", "VALID", 1),
	Port_Property("m_axi_kernel_BREADY", 1, hls_out, 2, "m_axi", "READY", 1),
	Port_Property("m_axi_kernel_BRESP", 2, hls_in, 2, "m_axi", "RESP", 1),
	Port_Property("m_axi_kernel_BID", 1, hls_in, 2, "m_axi", "ID", 1),
	Port_Property("m_axi_kernel_BUSER", 1, hls_in, 2, "m_axi", "DATA", 1),
	Port_Property("s_axi_control_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_AWADDR", 7, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_ARADDR", 7, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_BRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("interrupt", 1, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "LinearImageFilter";
