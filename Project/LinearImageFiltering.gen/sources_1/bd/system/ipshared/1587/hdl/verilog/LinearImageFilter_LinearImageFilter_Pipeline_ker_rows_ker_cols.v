// ==============================================================
// Generated by Vitis HLS v2023.2.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module LinearImageFilter_LinearImageFilter_Pipeline_ker_rows_ker_cols (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_kernel_AWVALID,
        m_axi_kernel_AWREADY,
        m_axi_kernel_AWADDR,
        m_axi_kernel_AWID,
        m_axi_kernel_AWLEN,
        m_axi_kernel_AWSIZE,
        m_axi_kernel_AWBURST,
        m_axi_kernel_AWLOCK,
        m_axi_kernel_AWCACHE,
        m_axi_kernel_AWPROT,
        m_axi_kernel_AWQOS,
        m_axi_kernel_AWREGION,
        m_axi_kernel_AWUSER,
        m_axi_kernel_WVALID,
        m_axi_kernel_WREADY,
        m_axi_kernel_WDATA,
        m_axi_kernel_WSTRB,
        m_axi_kernel_WLAST,
        m_axi_kernel_WID,
        m_axi_kernel_WUSER,
        m_axi_kernel_ARVALID,
        m_axi_kernel_ARREADY,
        m_axi_kernel_ARADDR,
        m_axi_kernel_ARID,
        m_axi_kernel_ARLEN,
        m_axi_kernel_ARSIZE,
        m_axi_kernel_ARBURST,
        m_axi_kernel_ARLOCK,
        m_axi_kernel_ARCACHE,
        m_axi_kernel_ARPROT,
        m_axi_kernel_ARQOS,
        m_axi_kernel_ARREGION,
        m_axi_kernel_ARUSER,
        m_axi_kernel_RVALID,
        m_axi_kernel_RREADY,
        m_axi_kernel_RDATA,
        m_axi_kernel_RLAST,
        m_axi_kernel_RID,
        m_axi_kernel_RFIFONUM,
        m_axi_kernel_RUSER,
        m_axi_kernel_RRESP,
        m_axi_kernel_BVALID,
        m_axi_kernel_BREADY,
        m_axi_kernel_BRESP,
        m_axi_kernel_BID,
        m_axi_kernel_BUSER,
        m_axi_image_in_AWVALID,
        m_axi_image_in_AWREADY,
        m_axi_image_in_AWADDR,
        m_axi_image_in_AWID,
        m_axi_image_in_AWLEN,
        m_axi_image_in_AWSIZE,
        m_axi_image_in_AWBURST,
        m_axi_image_in_AWLOCK,
        m_axi_image_in_AWCACHE,
        m_axi_image_in_AWPROT,
        m_axi_image_in_AWQOS,
        m_axi_image_in_AWREGION,
        m_axi_image_in_AWUSER,
        m_axi_image_in_WVALID,
        m_axi_image_in_WREADY,
        m_axi_image_in_WDATA,
        m_axi_image_in_WSTRB,
        m_axi_image_in_WLAST,
        m_axi_image_in_WID,
        m_axi_image_in_WUSER,
        m_axi_image_in_ARVALID,
        m_axi_image_in_ARREADY,
        m_axi_image_in_ARADDR,
        m_axi_image_in_ARID,
        m_axi_image_in_ARLEN,
        m_axi_image_in_ARSIZE,
        m_axi_image_in_ARBURST,
        m_axi_image_in_ARLOCK,
        m_axi_image_in_ARCACHE,
        m_axi_image_in_ARPROT,
        m_axi_image_in_ARQOS,
        m_axi_image_in_ARREGION,
        m_axi_image_in_ARUSER,
        m_axi_image_in_RVALID,
        m_axi_image_in_RREADY,
        m_axi_image_in_RDATA,
        m_axi_image_in_RLAST,
        m_axi_image_in_RID,
        m_axi_image_in_RFIFONUM,
        m_axi_image_in_RUSER,
        m_axi_image_in_RRESP,
        m_axi_image_in_BVALID,
        m_axi_image_in_BREADY,
        m_axi_image_in_BRESP,
        m_axi_image_in_BID,
        m_axi_image_in_BUSER,
        mul_ln7,
        padding,
        kernel_size_r,
        add,
        rows,
        sub_i,
        col,
        empty_26,
        cols,
        empty,
        image_in_offset,
        kernel_offset,
        sub16_i,
        mul_i,
        mul35_i,
        sum_1_out,
        sum_1_out_ap_vld,
        grp_fu_239_p_din0,
        grp_fu_239_p_din1,
        grp_fu_239_p_dout0,
        grp_fu_239_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 8'd1;
parameter    ap_ST_fsm_pp0_stage1 = 8'd2;
parameter    ap_ST_fsm_pp0_stage2 = 8'd4;
parameter    ap_ST_fsm_pp0_stage3 = 8'd8;
parameter    ap_ST_fsm_pp0_stage4 = 8'd16;
parameter    ap_ST_fsm_pp0_stage5 = 8'd32;
parameter    ap_ST_fsm_pp0_stage6 = 8'd64;
parameter    ap_ST_fsm_pp0_stage7 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_kernel_AWVALID;
input   m_axi_kernel_AWREADY;
output  [31:0] m_axi_kernel_AWADDR;
output  [0:0] m_axi_kernel_AWID;
output  [31:0] m_axi_kernel_AWLEN;
output  [2:0] m_axi_kernel_AWSIZE;
output  [1:0] m_axi_kernel_AWBURST;
output  [1:0] m_axi_kernel_AWLOCK;
output  [3:0] m_axi_kernel_AWCACHE;
output  [2:0] m_axi_kernel_AWPROT;
output  [3:0] m_axi_kernel_AWQOS;
output  [3:0] m_axi_kernel_AWREGION;
output  [0:0] m_axi_kernel_AWUSER;
output   m_axi_kernel_WVALID;
input   m_axi_kernel_WREADY;
output  [31:0] m_axi_kernel_WDATA;
output  [3:0] m_axi_kernel_WSTRB;
output   m_axi_kernel_WLAST;
output  [0:0] m_axi_kernel_WID;
output  [0:0] m_axi_kernel_WUSER;
output   m_axi_kernel_ARVALID;
input   m_axi_kernel_ARREADY;
output  [31:0] m_axi_kernel_ARADDR;
output  [0:0] m_axi_kernel_ARID;
output  [31:0] m_axi_kernel_ARLEN;
output  [2:0] m_axi_kernel_ARSIZE;
output  [1:0] m_axi_kernel_ARBURST;
output  [1:0] m_axi_kernel_ARLOCK;
output  [3:0] m_axi_kernel_ARCACHE;
output  [2:0] m_axi_kernel_ARPROT;
output  [3:0] m_axi_kernel_ARQOS;
output  [3:0] m_axi_kernel_ARREGION;
output  [0:0] m_axi_kernel_ARUSER;
input   m_axi_kernel_RVALID;
output   m_axi_kernel_RREADY;
input  [31:0] m_axi_kernel_RDATA;
input   m_axi_kernel_RLAST;
input  [0:0] m_axi_kernel_RID;
input  [8:0] m_axi_kernel_RFIFONUM;
input  [0:0] m_axi_kernel_RUSER;
input  [1:0] m_axi_kernel_RRESP;
input   m_axi_kernel_BVALID;
output   m_axi_kernel_BREADY;
input  [1:0] m_axi_kernel_BRESP;
input  [0:0] m_axi_kernel_BID;
input  [0:0] m_axi_kernel_BUSER;
output   m_axi_image_in_AWVALID;
input   m_axi_image_in_AWREADY;
output  [31:0] m_axi_image_in_AWADDR;
output  [0:0] m_axi_image_in_AWID;
output  [31:0] m_axi_image_in_AWLEN;
output  [2:0] m_axi_image_in_AWSIZE;
output  [1:0] m_axi_image_in_AWBURST;
output  [1:0] m_axi_image_in_AWLOCK;
output  [3:0] m_axi_image_in_AWCACHE;
output  [2:0] m_axi_image_in_AWPROT;
output  [3:0] m_axi_image_in_AWQOS;
output  [3:0] m_axi_image_in_AWREGION;
output  [0:0] m_axi_image_in_AWUSER;
output   m_axi_image_in_WVALID;
input   m_axi_image_in_WREADY;
output  [31:0] m_axi_image_in_WDATA;
output  [3:0] m_axi_image_in_WSTRB;
output   m_axi_image_in_WLAST;
output  [0:0] m_axi_image_in_WID;
output  [0:0] m_axi_image_in_WUSER;
output   m_axi_image_in_ARVALID;
input   m_axi_image_in_ARREADY;
output  [31:0] m_axi_image_in_ARADDR;
output  [0:0] m_axi_image_in_ARID;
output  [31:0] m_axi_image_in_ARLEN;
output  [2:0] m_axi_image_in_ARSIZE;
output  [1:0] m_axi_image_in_ARBURST;
output  [1:0] m_axi_image_in_ARLOCK;
output  [3:0] m_axi_image_in_ARCACHE;
output  [2:0] m_axi_image_in_ARPROT;
output  [3:0] m_axi_image_in_ARQOS;
output  [3:0] m_axi_image_in_ARREGION;
output  [0:0] m_axi_image_in_ARUSER;
input   m_axi_image_in_RVALID;
output   m_axi_image_in_RREADY;
input  [31:0] m_axi_image_in_RDATA;
input   m_axi_image_in_RLAST;
input  [0:0] m_axi_image_in_RID;
input  [8:0] m_axi_image_in_RFIFONUM;
input  [0:0] m_axi_image_in_RUSER;
input  [1:0] m_axi_image_in_RRESP;
input   m_axi_image_in_BVALID;
output   m_axi_image_in_BREADY;
input  [1:0] m_axi_image_in_BRESP;
input  [0:0] m_axi_image_in_BID;
input  [0:0] m_axi_image_in_BUSER;
input  [63:0] mul_ln7;
input  [7:0] padding;
input  [31:0] kernel_size_r;
input  [31:0] add;
input  [31:0] rows;
input  [29:0] sub_i;
input  [31:0] col;
input  [30:0] empty_26;
input  [31:0] cols;
input  [29:0] empty;
input  [31:0] image_in_offset;
input  [31:0] kernel_offset;
input  [29:0] sub16_i;
input  [29:0] mul_i;
input  [29:0] mul35_i;
output  [31:0] sum_1_out;
output   sum_1_out_ap_vld;
output  [31:0] grp_fu_239_p_din0;
output  [31:0] grp_fu_239_p_din1;
input  [31:0] grp_fu_239_p_dout0;
output   grp_fu_239_p_ce;

reg ap_idle;
reg m_axi_kernel_ARVALID;
reg m_axi_kernel_RREADY;
reg m_axi_image_in_ARVALID;
reg m_axi_image_in_RREADY;
reg sum_1_out_ap_vld;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7_subdone;
reg   [0:0] icmp_ln27_reg_845;
reg    ap_condition_exit_pp0_iter0_stage7;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    kernel_blk_n_AR;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
reg   [0:0] or_ln50_1_reg_934;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5_11001;
reg    ap_predicate_pred209_state7;
reg    kernel_blk_n_R;
reg   [0:0] or_ln50_1_reg_934_pp0_iter1_reg;
reg    ap_predicate_pred229_state15;
reg    image_in_blk_n_AR;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_11001;
reg    ap_predicate_pred244_state11;
reg    image_in_blk_n_R;
reg    ap_predicate_pred229_state19;
reg   [29:0] newCol_5_ph_reg_249;
wire    ap_block_pp0_stage0_11001;
wire   [31:0] p_cast3_fu_294_p1;
reg   [31:0] p_cast3_reg_840;
wire   [0:0] icmp_ln27_fu_321_p2;
reg   [0:0] icmp_ln27_reg_845_pp0_iter1_reg;
reg   [0:0] icmp_ln27_reg_845_pp0_iter2_reg;
wire   [63:0] add_ln27_fu_326_p2;
reg   [63:0] add_ln27_reg_849;
reg   [31:0] j_load_reg_854;
wire   [0:0] icmp_ln29_fu_338_p2;
reg   [0:0] icmp_ln29_reg_859;
wire  signed [31:0] select_ln27_fu_349_p3;
reg  signed [31:0] select_ln27_reg_864;
wire   [31:0] select_ln25_fu_357_p3;
reg   [31:0] select_ln25_reg_871;
reg    ap_predicate_op159_readreq_state11;
reg    ap_block_state11_io;
reg    ap_predicate_op172_read_state19;
reg    ap_block_state19_pp0_stage2_iter2;
reg    ap_block_pp0_stage2_11001;
wire   [31:0] newRow_fu_363_p2;
reg   [31:0] newRow_reg_877;
wire   [29:0] empty_37_fu_367_p1;
reg   [29:0] empty_37_reg_886;
wire   [30:0] empty_38_fu_371_p1;
reg   [30:0] empty_38_reg_891;
reg   [0:0] tmp_2_reg_896;
wire   [31:0] newCol_fu_387_p2;
reg   [31:0] newCol_reg_903;
wire   [29:0] trunc_ln32_fu_393_p1;
reg   [29:0] trunc_ln32_reg_912;
wire   [30:0] trunc_ln32_1_fu_397_p1;
reg   [30:0] trunc_ln32_1_reg_917;
reg   [0:0] tmp_3_reg_922;
wire   [29:0] newRow_2_fu_444_p3;
reg   [29:0] newRow_2_reg_929;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3_11001;
wire   [0:0] or_ln50_1_fu_471_p2;
reg   [0:0] or_ln50_1_reg_934_pp0_iter2_reg;
reg   [0:0] or_ln50_1_reg_934_pp0_iter3_reg;
wire   [31:0] newRow_1_fu_500_p3;
reg   [31:0] newRow_1_reg_938;
wire   [29:0] trunc_ln31_fu_506_p1;
reg   [29:0] trunc_ln31_reg_943;
wire   [31:0] newCol_3_fu_533_p3;
reg   [31:0] newCol_3_reg_949;
wire   [29:0] trunc_ln32_2_fu_539_p1;
reg   [29:0] trunc_ln32_2_reg_954;
wire   [29:0] newCol_1_fu_568_p3;
reg   [29:0] newCol_1_reg_960;
wire   [29:0] trunc_ln39_fu_575_p1;
reg   [29:0] trunc_ln39_reg_965;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4_11001;
wire   [29:0] newRow_5_fu_599_p3;
reg   [29:0] newRow_5_reg_970;
wire   [0:0] icmp_ln85_fu_606_p2;
reg   [0:0] icmp_ln85_reg_976;
wire   [29:0] newCol_4_fu_615_p2;
reg   [29:0] newCol_4_reg_980;
reg   [29:0] trunc_ln39_4_reg_985;
reg    ap_predicate_op142_readreq_state7;
reg    ap_block_state7_io;
reg    ap_predicate_op168_read_state15;
reg    ap_block_state15_pp0_stage6_iter1;
reg    ap_block_pp0_stage6_11001;
wire   [29:0] grp_fu_285_p2;
reg   [29:0] mul_ln39_reg_996;
reg   [29:0] trunc_ln39_1_reg_1001;
reg   [31:0] kernel_addr_read_reg_1012;
reg   [31:0] image_in_addr_read_reg_1017;
wire   [31:0] grp_fu_281_p2;
reg   [31:0] mul_reg_1032;
wire    ap_block_pp0_stage7_11001;
wire   [31:0] grp_fu_277_p2;
reg   [31:0] sum_1_reg_1042;
reg    ap_enable_reg_pp0_iter0_reg;
reg   [29:0] ap_phi_reg_pp0_iter0_newCol_5_ph_reg_249;
reg  signed [29:0] ap_phi_reg_pp0_iter0_newRow_5_ph_reg_263;
wire  signed [31:0] sext_ln39_1_fu_651_p1;
wire  signed [31:0] sext_ln39_fu_707_p1;
reg   [31:0] j_fu_112;
wire   [31:0] add_ln29_fu_661_p2;
wire    ap_loop_init;
wire    ap_block_pp0_stage1;
reg   [31:0] i_fu_116;
reg   [63:0] indvar_flatten_fu_120;
reg   [31:0] sum_fu_124;
reg    ap_predicate_pred525_state32;
reg   [31:0] ap_sig_allocacmp_sum_load_1;
wire    ap_block_pp0_stage7;
wire    ap_block_pp0_stage7_01001;
wire    ap_block_pp0_stage0;
wire   [31:0] grp_fu_281_p0;
wire   [31:0] grp_fu_281_p1;
wire    ap_block_pp0_stage3;
wire  signed [31:0] icmp_ln29_fu_338_p1;
wire   [31:0] add_ln27_1_fu_343_p2;
wire   [31:0] sub_ln32_fu_383_p2;
wire   [0:0] ult_fu_409_p2;
wire   [30:0] empty_39_fu_419_p3;
wire   [31:0] p_cast4_fu_425_p1;
wire   [0:0] ult43_fu_433_p2;
wire   [0:0] rev44_fu_438_p2;
wire   [29:0] empty_40_fu_429_p1;
wire   [0:0] icmp_ln50_fu_451_p2;
wire   [0:0] xor_ln50_fu_455_p2;
wire   [0:0] rev_fu_413_p2;
wire   [0:0] or_ln50_fu_466_p2;
wire   [0:0] or_ln50_2_fu_461_p2;
wire   [0:0] abscond_fu_482_p2;
wire   [31:0] neg_fu_477_p2;
wire   [31:0] abs_fu_487_p3;
wire   [31:0] newRow_3_fu_494_p2;
wire   [0:0] abscond2_fu_515_p2;
wire   [31:0] neg1_fu_510_p2;
wire   [31:0] abs3_fu_520_p3;
wire   [31:0] newCol_2_fu_527_p2;
wire   [30:0] select_ln63_fu_543_p3;
wire   [31:0] zext_ln67_fu_549_p1;
wire   [0:0] icmp_ln67_fu_557_p2;
wire   [0:0] xor_ln67_fu_562_p2;
wire   [29:0] trunc_ln67_fu_553_p1;
wire    ap_block_pp0_stage4;
wire   [0:0] icmp_ln77_fu_579_p2;
wire   [29:0] add_ln79_fu_589_p2;
wire   [0:0] xor_ln77_fu_583_p2;
wire   [29:0] newRow_4_fu_594_p2;
wire   [29:0] add_ln87_fu_610_p2;
wire    ap_block_pp0_stage5;
wire   [29:0] trunc_ln39_2_fu_620_p1;
wire   [29:0] add_ln39_2_fu_623_p2;
wire   [31:0] shl_ln39_1_fu_628_p3;
wire   [31:0] add_ln39_3_fu_636_p2;
wire   [29:0] add_ln39_fu_679_p2;
wire   [31:0] shl_ln1_fu_684_p3;
wire   [31:0] add_ln39_1_fu_692_p2;
reg    grp_fu_277_ce;
reg    grp_fu_281_ce;
reg    grp_fu_285_ce;
reg    grp_fu_290_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [7:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to3;
reg    ap_done_pending_pp0;
wire    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_994;
reg    ap_condition_999;
reg    ap_condition_1005;
reg    ap_condition_1009;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 j_fu_112 = 32'd0;
#0 i_fu_116 = 32'd0;
#0 indvar_flatten_fu_120 = 64'd0;
#0 sum_fu_124 = 32'd0;
#0 ap_done_reg = 1'b0;
end

LinearImageFilter_fadd_32ns_32ns_32_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_8_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_sig_allocacmp_sum_load_1),
    .din1(mul_reg_1032),
    .ce(grp_fu_277_ce),
    .dout(grp_fu_277_p2)
);

LinearImageFilter_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_281_p0),
    .din1(grp_fu_281_p1),
    .ce(grp_fu_281_ce),
    .dout(grp_fu_281_p2)
);

LinearImageFilter_mul_30s_30s_30_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 30 ),
    .dout_WIDTH( 30 ))
mul_30s_30s_30_3_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_phi_reg_pp0_iter0_newRow_5_ph_reg_263),
    .din1(empty),
    .ce(grp_fu_285_ce),
    .dout(grp_fu_285_p2)
);

LinearImageFilter_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage7),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage7)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_845 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_1009)) begin
            ap_phi_reg_pp0_iter0_newCol_5_ph_reg_249 <= trunc_ln32_reg_912;
        end else if ((1'b1 == ap_condition_1005)) begin
            ap_phi_reg_pp0_iter0_newCol_5_ph_reg_249 <= trunc_ln32_2_reg_954;
        end else if ((1'b1 == ap_condition_999)) begin
            ap_phi_reg_pp0_iter0_newCol_5_ph_reg_249 <= newCol_1_reg_960;
        end else if ((1'b1 == ap_condition_994)) begin
            ap_phi_reg_pp0_iter0_newCol_5_ph_reg_249 <= newCol_4_reg_980;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_845 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (or_ln50_1_fu_471_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_phi_reg_pp0_iter0_newRow_5_ph_reg_263 <= empty_37_reg_886;
    end else if (((icmp_ln27_reg_845 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln50_1_reg_934 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (padding == 8'd1))) begin
        ap_phi_reg_pp0_iter0_newRow_5_ph_reg_263 <= newRow_2_reg_929;
    end else if ((((icmp_ln27_reg_845 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln85_reg_976 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln50_1_reg_934 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (padding == 8'd2)) | ((icmp_ln27_reg_845 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln85_reg_976 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln50_1_reg_934 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (padding == 8'd2)))) begin
        ap_phi_reg_pp0_iter0_newRow_5_ph_reg_263 <= newRow_5_reg_970;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_fu_116 <= 32'd0;
        end else if (((icmp_ln27_reg_845 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            i_fu_116 <= select_ln27_reg_864;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_120 <= 64'd0;
        end else if (((icmp_ln27_reg_845 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten_fu_120 <= add_ln27_reg_849;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            j_fu_112 <= 32'd0;
        end else if (((icmp_ln27_reg_845 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            j_fu_112 <= add_ln29_fu_661_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_fu_124 <= 32'd0;
    end else if (((ap_predicate_pred525_state32 == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        sum_fu_124 <= sum_1_reg_1042;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln27_reg_849 <= add_ln27_fu_326_p2;
        ap_predicate_pred229_state19 <= ((or_ln50_1_reg_934_pp0_iter1_reg == 1'd0) | ((padding == 8'd1) | (padding == 8'd2)));
        ap_predicate_pred244_state11 <= ((or_ln50_1_reg_934 == 1'd0) | ((padding == 8'd1) | (padding == 8'd2)));
        icmp_ln27_reg_845 <= icmp_ln27_fu_321_p2;
        icmp_ln27_reg_845_pp0_iter1_reg <= icmp_ln27_reg_845;
        icmp_ln27_reg_845_pp0_iter2_reg <= icmp_ln27_reg_845_pp0_iter1_reg;
        icmp_ln29_reg_859 <= icmp_ln29_fu_338_p2;
        j_load_reg_854 <= j_fu_112;
        select_ln27_reg_864 <= select_ln27_fu_349_p3;
        trunc_ln39_1_reg_1001 <= {{add_ln39_1_fu_692_p2[31:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_predicate_pred209_state7 <= ((((icmp_ln27_reg_845 == 1'd0) & (padding == 8'd1)) | ((icmp_ln27_reg_845 == 1'd0) & (padding == 8'd2))) | ((icmp_ln27_reg_845 == 1'd0) & (or_ln50_1_reg_934 == 1'd0)));
        ap_predicate_pred229_state15 <= ((or_ln50_1_reg_934_pp0_iter1_reg == 1'd0) | ((padding == 8'd1) | (padding == 8'd2)));
        trunc_ln39_4_reg_985 <= {{add_ln39_3_fu_636_p2[31:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        ap_predicate_pred525_state32 <= ((or_ln50_1_reg_934_pp0_iter3_reg == 1'd0) | ((padding == 8'd1) | (padding == 8'd2)));
        kernel_addr_read_reg_1012 <= m_axi_kernel_RDATA;
        mul_reg_1032 <= grp_fu_281_p2;
        sum_1_reg_1042 <= grp_fu_277_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        empty_37_reg_886 <= empty_37_fu_367_p1;
        empty_38_reg_891 <= empty_38_fu_371_p1;
        image_in_addr_read_reg_1017 <= m_axi_image_in_RDATA;
        newCol_reg_903 <= newCol_fu_387_p2;
        newRow_reg_877 <= newRow_fu_363_p2;
        select_ln25_reg_871 <= select_ln25_fu_357_p3;
        tmp_2_reg_896 <= newRow_fu_363_p2[32'd31];
        tmp_3_reg_922 <= newCol_fu_387_p2[32'd31];
        trunc_ln32_1_reg_917 <= trunc_ln32_1_fu_397_p1;
        trunc_ln32_reg_912 <= trunc_ln32_fu_393_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        icmp_ln85_reg_976 <= icmp_ln85_fu_606_p2;
        newCol_4_reg_980 <= newCol_4_fu_615_p2;
        newRow_5_reg_970 <= newRow_5_fu_599_p3;
        trunc_ln39_reg_965 <= trunc_ln39_fu_575_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul_ln39_reg_996 <= grp_fu_285_p2;
        p_cast3_reg_840[30 : 0] <= p_cast3_fu_294_p1[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        newCol_1_reg_960 <= newCol_1_fu_568_p3;
        newCol_3_reg_949 <= newCol_3_fu_533_p3;
        newRow_1_reg_938 <= newRow_1_fu_500_p3;
        newRow_2_reg_929 <= newRow_2_fu_444_p3;
        or_ln50_1_reg_934 <= or_ln50_1_fu_471_p2;
        or_ln50_1_reg_934_pp0_iter1_reg <= or_ln50_1_reg_934;
        or_ln50_1_reg_934_pp0_iter2_reg <= or_ln50_1_reg_934_pp0_iter1_reg;
        or_ln50_1_reg_934_pp0_iter3_reg <= or_ln50_1_reg_934_pp0_iter2_reg;
        trunc_ln31_reg_943 <= trunc_ln31_fu_506_p1;
        trunc_ln32_2_reg_954 <= trunc_ln32_2_fu_539_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        newCol_5_ph_reg_249 <= ap_phi_reg_pp0_iter0_newCol_5_ph_reg_249;
    end
end

always @ (*) begin
    if (((icmp_ln27_reg_845 == 1'd1) & (1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_condition_exit_pp0_iter0_stage7 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage7 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (~((ap_loop_exit_ready_pp0_iter2_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b0) & (ap_loop_exit_ready == 1'b0))) begin
        ap_done_pending_pp0 = 1'b1;
    end else begin
        ap_done_pending_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to3 = 1'b1;
    end else begin
        ap_idle_pp0_1to3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_pred525_state32 == 1'b1) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_sig_allocacmp_sum_load_1 = sum_1_reg_1042;
    end else begin
        ap_sig_allocacmp_sum_load_1 = sum_fu_124;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        grp_fu_277_ce = 1'b1;
    end else begin
        grp_fu_277_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        grp_fu_281_ce = 1'b1;
    end else begin
        grp_fu_281_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_285_ce = 1'b1;
    end else begin
        grp_fu_285_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_290_ce = 1'b1;
    end else begin
        grp_fu_290_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_pred244_state11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        image_in_blk_n_AR = m_axi_image_in_ARREADY;
    end else begin
        image_in_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_pred229_state19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        image_in_blk_n_R = m_axi_image_in_RVALID;
    end else begin
        image_in_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_pred209_state7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        kernel_blk_n_AR = m_axi_kernel_ARREADY;
    end else begin
        kernel_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_pred229_state15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        kernel_blk_n_R = m_axi_kernel_RVALID;
    end else begin
        kernel_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_predicate_op159_readreq_state11 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        m_axi_image_in_ARVALID = 1'b1;
    end else begin
        m_axi_image_in_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_predicate_op172_read_state19 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        m_axi_image_in_RREADY = 1'b1;
    end else begin
        m_axi_image_in_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_predicate_op142_readreq_state7 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        m_axi_kernel_ARVALID = 1'b1;
    end else begin
        m_axi_kernel_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_predicate_op168_read_state15 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        m_axi_kernel_RREADY = 1'b1;
    end else begin
        m_axi_kernel_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln27_reg_845_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        sum_1_out_ap_vld = 1'b1;
    end else begin
        sum_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_done_pending_pp0 == 1'b0) & (ap_idle_pp0_1to3 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign abs3_fu_520_p3 = ((abscond2_fu_515_p2[0:0] == 1'b1) ? newCol_reg_903 : neg1_fu_510_p2);

assign abs_fu_487_p3 = ((abscond_fu_482_p2[0:0] == 1'b1) ? newRow_reg_877 : neg_fu_477_p2);

assign abscond2_fu_515_p2 = (($signed(newCol_reg_903) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign abscond_fu_482_p2 = (($signed(newRow_reg_877) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign add_ln27_1_fu_343_p2 = (i_fu_116 + 32'd1);

assign add_ln27_fu_326_p2 = (indvar_flatten_fu_120 + 64'd1);

assign add_ln29_fu_661_p2 = (select_ln25_reg_871 + 32'd1);

assign add_ln39_1_fu_692_p2 = (shl_ln1_fu_684_p3 + image_in_offset);

assign add_ln39_2_fu_623_p2 = (trunc_ln39_2_fu_620_p1 + trunc_ln39_reg_965);

assign add_ln39_3_fu_636_p2 = (shl_ln39_1_fu_628_p3 + kernel_offset);

assign add_ln39_fu_679_p2 = (mul_ln39_reg_996 + newCol_5_ph_reg_249);

assign add_ln79_fu_589_p2 = ($signed(mul_i) + $signed(30'd1073741823));

assign add_ln87_fu_610_p2 = ($signed(mul35_i) + $signed(30'd1073741823));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state19_pp0_stage2_iter2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state11_io)));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state19_pp0_stage2_iter2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state11_io)));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_11001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state7_io)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state15_pp0_stage6_iter1)));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state7_io)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state15_pp0_stage6_iter1)));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_io = ((ap_predicate_op159_readreq_state11 == 1'b1) & (m_axi_image_in_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state15_pp0_stage6_iter1 = ((m_axi_kernel_RVALID == 1'b0) & (ap_predicate_op168_read_state15 == 1'b1));
end

always @ (*) begin
    ap_block_state19_pp0_stage2_iter2 = ((ap_predicate_op172_read_state19 == 1'b1) & (m_axi_image_in_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state7_io = ((m_axi_kernel_ARREADY == 1'b0) & (ap_predicate_op142_readreq_state7 == 1'b1));
end

always @ (*) begin
    ap_condition_1005 = ((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln85_reg_976 == 1'd1) & (or_ln50_1_reg_934 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (padding == 8'd2));
end

always @ (*) begin
    ap_condition_1009 = ((1'b0 == ap_block_pp0_stage3_11001) & (or_ln50_1_fu_471_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3));
end

always @ (*) begin
    ap_condition_994 = ((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln85_reg_976 == 1'd0) & (or_ln50_1_reg_934 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (padding == 8'd2));
end

always @ (*) begin
    ap_condition_999 = ((1'b0 == ap_block_pp0_stage4_11001) & (or_ln50_1_reg_934 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (padding == 8'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage7;

always @ (*) begin
    ap_predicate_op142_readreq_state7 = ((((icmp_ln27_reg_845 == 1'd0) & (padding == 8'd1)) | ((icmp_ln27_reg_845 == 1'd0) & (padding == 8'd2))) | ((icmp_ln27_reg_845 == 1'd0) & (or_ln50_1_reg_934 == 1'd0)));
end

always @ (*) begin
    ap_predicate_op159_readreq_state11 = ((or_ln50_1_reg_934 == 1'd0) | ((padding == 8'd1) | (padding == 8'd2)));
end

always @ (*) begin
    ap_predicate_op168_read_state15 = ((or_ln50_1_reg_934_pp0_iter1_reg == 1'd0) | ((padding == 8'd1) | (padding == 8'd2)));
end

always @ (*) begin
    ap_predicate_op172_read_state19 = ((or_ln50_1_reg_934_pp0_iter1_reg == 1'd0) | ((padding == 8'd1) | (padding == 8'd2)));
end

assign empty_37_fu_367_p1 = newRow_fu_363_p2[29:0];

assign empty_38_fu_371_p1 = newRow_fu_363_p2[30:0];

assign empty_39_fu_419_p3 = ((tmp_2_reg_896[0:0] == 1'b1) ? 31'd0 : empty_38_reg_891);

assign empty_40_fu_429_p1 = empty_39_fu_419_p3[29:0];

assign grp_fu_239_p_ce = grp_fu_290_ce;

assign grp_fu_239_p_din0 = select_ln27_reg_864;

assign grp_fu_239_p_din1 = kernel_size_r;

assign grp_fu_281_p0 = image_in_addr_read_reg_1017;

assign grp_fu_281_p1 = kernel_addr_read_reg_1012;

assign icmp_ln27_fu_321_p2 = ((indvar_flatten_fu_120 == mul_ln7) ? 1'b1 : 1'b0);

assign icmp_ln29_fu_338_p1 = kernel_size_r;

assign icmp_ln29_fu_338_p2 = ((j_fu_112 == icmp_ln29_fu_338_p1) ? 1'b1 : 1'b0);

assign icmp_ln50_fu_451_p2 = ((newCol_reg_903 < cols) ? 1'b1 : 1'b0);

assign icmp_ln67_fu_557_p2 = ((zext_ln67_fu_549_p1 < cols) ? 1'b1 : 1'b0);

assign icmp_ln77_fu_579_p2 = ((newRow_1_reg_938 < rows) ? 1'b1 : 1'b0);

assign icmp_ln85_fu_606_p2 = ((newCol_3_reg_949 < cols) ? 1'b1 : 1'b0);

assign m_axi_image_in_ARADDR = sext_ln39_fu_707_p1;

assign m_axi_image_in_ARBURST = 2'd0;

assign m_axi_image_in_ARCACHE = 4'd0;

assign m_axi_image_in_ARID = 1'd0;

assign m_axi_image_in_ARLEN = 32'd1;

assign m_axi_image_in_ARLOCK = 2'd0;

assign m_axi_image_in_ARPROT = 3'd0;

assign m_axi_image_in_ARQOS = 4'd0;

assign m_axi_image_in_ARREGION = 4'd0;

assign m_axi_image_in_ARSIZE = 3'd0;

assign m_axi_image_in_ARUSER = 1'd0;

assign m_axi_image_in_AWADDR = 32'd0;

assign m_axi_image_in_AWBURST = 2'd0;

assign m_axi_image_in_AWCACHE = 4'd0;

assign m_axi_image_in_AWID = 1'd0;

assign m_axi_image_in_AWLEN = 32'd0;

assign m_axi_image_in_AWLOCK = 2'd0;

assign m_axi_image_in_AWPROT = 3'd0;

assign m_axi_image_in_AWQOS = 4'd0;

assign m_axi_image_in_AWREGION = 4'd0;

assign m_axi_image_in_AWSIZE = 3'd0;

assign m_axi_image_in_AWUSER = 1'd0;

assign m_axi_image_in_AWVALID = 1'b0;

assign m_axi_image_in_BREADY = 1'b0;

assign m_axi_image_in_WDATA = 32'd0;

assign m_axi_image_in_WID = 1'd0;

assign m_axi_image_in_WLAST = 1'b0;

assign m_axi_image_in_WSTRB = 4'd0;

assign m_axi_image_in_WUSER = 1'd0;

assign m_axi_image_in_WVALID = 1'b0;

assign m_axi_kernel_ARADDR = sext_ln39_1_fu_651_p1;

assign m_axi_kernel_ARBURST = 2'd0;

assign m_axi_kernel_ARCACHE = 4'd0;

assign m_axi_kernel_ARID = 1'd0;

assign m_axi_kernel_ARLEN = 32'd1;

assign m_axi_kernel_ARLOCK = 2'd0;

assign m_axi_kernel_ARPROT = 3'd0;

assign m_axi_kernel_ARQOS = 4'd0;

assign m_axi_kernel_ARREGION = 4'd0;

assign m_axi_kernel_ARSIZE = 3'd0;

assign m_axi_kernel_ARUSER = 1'd0;

assign m_axi_kernel_AWADDR = 32'd0;

assign m_axi_kernel_AWBURST = 2'd0;

assign m_axi_kernel_AWCACHE = 4'd0;

assign m_axi_kernel_AWID = 1'd0;

assign m_axi_kernel_AWLEN = 32'd0;

assign m_axi_kernel_AWLOCK = 2'd0;

assign m_axi_kernel_AWPROT = 3'd0;

assign m_axi_kernel_AWQOS = 4'd0;

assign m_axi_kernel_AWREGION = 4'd0;

assign m_axi_kernel_AWSIZE = 3'd0;

assign m_axi_kernel_AWUSER = 1'd0;

assign m_axi_kernel_AWVALID = 1'b0;

assign m_axi_kernel_BREADY = 1'b0;

assign m_axi_kernel_WDATA = 32'd0;

assign m_axi_kernel_WID = 1'd0;

assign m_axi_kernel_WLAST = 1'b0;

assign m_axi_kernel_WSTRB = 4'd0;

assign m_axi_kernel_WUSER = 1'd0;

assign m_axi_kernel_WVALID = 1'b0;

assign neg1_fu_510_p2 = (32'd0 - newCol_reg_903);

assign neg_fu_477_p2 = (32'd0 - newRow_reg_877);

assign newCol_1_fu_568_p3 = ((xor_ln67_fu_562_p2[0:0] == 1'b1) ? sub16_i : trunc_ln67_fu_553_p1);

assign newCol_2_fu_527_p2 = ($signed(abs3_fu_520_p3) + $signed(32'd4294967295));

assign newCol_3_fu_533_p3 = ((tmp_3_reg_922[0:0] == 1'b1) ? newCol_2_fu_527_p2 : newCol_reg_903);

assign newCol_4_fu_615_p2 = (add_ln87_fu_610_p2 - trunc_ln32_2_reg_954);

assign newCol_fu_387_p2 = (select_ln25_fu_357_p3 + sub_ln32_fu_383_p2);

assign newRow_1_fu_500_p3 = ((tmp_2_reg_896[0:0] == 1'b1) ? newRow_3_fu_494_p2 : newRow_reg_877);

assign newRow_2_fu_444_p3 = ((rev44_fu_438_p2[0:0] == 1'b1) ? sub_i : empty_40_fu_429_p1);

assign newRow_3_fu_494_p2 = ($signed(abs_fu_487_p3) + $signed(32'd4294967295));

assign newRow_4_fu_594_p2 = (add_ln79_fu_589_p2 - trunc_ln31_reg_943);

assign newRow_5_fu_599_p3 = ((xor_ln77_fu_583_p2[0:0] == 1'b1) ? newRow_4_fu_594_p2 : trunc_ln31_reg_943);

assign newRow_fu_363_p2 = ($signed(select_ln27_reg_864) + $signed(add));

assign or_ln50_1_fu_471_p2 = (or_ln50_fu_466_p2 | or_ln50_2_fu_461_p2);

assign or_ln50_2_fu_461_p2 = (xor_ln50_fu_455_p2 | tmp_3_reg_922);

assign or_ln50_fu_466_p2 = (tmp_2_reg_896 | rev_fu_413_p2);

assign p_cast3_fu_294_p1 = empty_26;

assign p_cast4_fu_425_p1 = empty_39_fu_419_p3;

assign rev44_fu_438_p2 = (ult43_fu_433_p2 ^ 1'd1);

assign rev_fu_413_p2 = (ult_fu_409_p2 ^ 1'd1);

assign select_ln25_fu_357_p3 = ((icmp_ln29_reg_859[0:0] == 1'b1) ? 32'd0 : j_load_reg_854);

assign select_ln27_fu_349_p3 = ((icmp_ln29_fu_338_p2[0:0] == 1'b1) ? add_ln27_1_fu_343_p2 : i_fu_116);

assign select_ln63_fu_543_p3 = ((tmp_3_reg_922[0:0] == 1'b1) ? 31'd0 : trunc_ln32_1_reg_917);

assign sext_ln39_1_fu_651_p1 = $signed(trunc_ln39_4_reg_985);

assign sext_ln39_fu_707_p1 = $signed(trunc_ln39_1_reg_1001);

assign shl_ln1_fu_684_p3 = {{add_ln39_fu_679_p2}, {2'd0}};

assign shl_ln39_1_fu_628_p3 = {{add_ln39_2_fu_623_p2}, {2'd0}};

assign sub_ln32_fu_383_p2 = (col - p_cast3_reg_840);

assign sum_1_out = sum_fu_124;

assign trunc_ln31_fu_506_p1 = newRow_1_fu_500_p3[29:0];

assign trunc_ln32_1_fu_397_p1 = newCol_fu_387_p2[30:0];

assign trunc_ln32_2_fu_539_p1 = newCol_3_fu_533_p3[29:0];

assign trunc_ln32_fu_393_p1 = newCol_fu_387_p2[29:0];

assign trunc_ln39_2_fu_620_p1 = select_ln25_reg_871[29:0];

assign trunc_ln39_fu_575_p1 = grp_fu_239_p_dout0[29:0];

assign trunc_ln67_fu_553_p1 = select_ln63_fu_543_p3[29:0];

assign ult43_fu_433_p2 = ((p_cast4_fu_425_p1 < rows) ? 1'b1 : 1'b0);

assign ult_fu_409_p2 = ((newRow_reg_877 < rows) ? 1'b1 : 1'b0);

assign xor_ln50_fu_455_p2 = (icmp_ln50_fu_451_p2 ^ 1'd1);

assign xor_ln67_fu_562_p2 = (icmp_ln67_fu_557_p2 ^ 1'd1);

assign xor_ln77_fu_583_p2 = (icmp_ln77_fu_579_p2 ^ 1'd1);

assign zext_ln67_fu_549_p1 = select_ln63_fu_543_p3;

always @ (posedge ap_clk) begin
    p_cast3_reg_840[31] <= 1'b0;
end

endmodule //LinearImageFilter_LinearImageFilter_Pipeline_ker_rows_ker_cols
