// ==============================================================
// Generated by Vitis HLS v2023.2.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="LinearImageFilter_LinearImageFilter,hls_ip_2023_2_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=6,HLS_SYN_DSP=0,HLS_SYN_FF=7682,HLS_SYN_LUT=7366,HLS_VERSION=2023_2_2}" *)

module LinearImageFilter (
        ap_clk,
        ap_rst_n,
        m_axi_image_out_AWVALID,
        m_axi_image_out_AWREADY,
        m_axi_image_out_AWADDR,
        m_axi_image_out_AWID,
        m_axi_image_out_AWLEN,
        m_axi_image_out_AWSIZE,
        m_axi_image_out_AWBURST,
        m_axi_image_out_AWLOCK,
        m_axi_image_out_AWCACHE,
        m_axi_image_out_AWPROT,
        m_axi_image_out_AWQOS,
        m_axi_image_out_AWREGION,
        m_axi_image_out_AWUSER,
        m_axi_image_out_WVALID,
        m_axi_image_out_WREADY,
        m_axi_image_out_WDATA,
        m_axi_image_out_WSTRB,
        m_axi_image_out_WLAST,
        m_axi_image_out_WID,
        m_axi_image_out_WUSER,
        m_axi_image_out_ARVALID,
        m_axi_image_out_ARREADY,
        m_axi_image_out_ARADDR,
        m_axi_image_out_ARID,
        m_axi_image_out_ARLEN,
        m_axi_image_out_ARSIZE,
        m_axi_image_out_ARBURST,
        m_axi_image_out_ARLOCK,
        m_axi_image_out_ARCACHE,
        m_axi_image_out_ARPROT,
        m_axi_image_out_ARQOS,
        m_axi_image_out_ARREGION,
        m_axi_image_out_ARUSER,
        m_axi_image_out_RVALID,
        m_axi_image_out_RREADY,
        m_axi_image_out_RDATA,
        m_axi_image_out_RLAST,
        m_axi_image_out_RID,
        m_axi_image_out_RUSER,
        m_axi_image_out_RRESP,
        m_axi_image_out_BVALID,
        m_axi_image_out_BREADY,
        m_axi_image_out_BRESP,
        m_axi_image_out_BID,
        m_axi_image_out_BUSER,
        m_axi_image_in_AWVALID,
        m_axi_image_in_AWREADY,
        m_axi_image_in_AWADDR,
        m_axi_image_in_AWID,
        m_axi_image_in_AWLEN,
        m_axi_image_in_AWSIZE,
        m_axi_image_in_AWBURST,
        m_axi_image_in_AWLOCK,
        m_axi_image_in_AWCACHE,
        m_axi_image_in_AWPROT,
        m_axi_image_in_AWQOS,
        m_axi_image_in_AWREGION,
        m_axi_image_in_AWUSER,
        m_axi_image_in_WVALID,
        m_axi_image_in_WREADY,
        m_axi_image_in_WDATA,
        m_axi_image_in_WSTRB,
        m_axi_image_in_WLAST,
        m_axi_image_in_WID,
        m_axi_image_in_WUSER,
        m_axi_image_in_ARVALID,
        m_axi_image_in_ARREADY,
        m_axi_image_in_ARADDR,
        m_axi_image_in_ARID,
        m_axi_image_in_ARLEN,
        m_axi_image_in_ARSIZE,
        m_axi_image_in_ARBURST,
        m_axi_image_in_ARLOCK,
        m_axi_image_in_ARCACHE,
        m_axi_image_in_ARPROT,
        m_axi_image_in_ARQOS,
        m_axi_image_in_ARREGION,
        m_axi_image_in_ARUSER,
        m_axi_image_in_RVALID,
        m_axi_image_in_RREADY,
        m_axi_image_in_RDATA,
        m_axi_image_in_RLAST,
        m_axi_image_in_RID,
        m_axi_image_in_RUSER,
        m_axi_image_in_RRESP,
        m_axi_image_in_BVALID,
        m_axi_image_in_BREADY,
        m_axi_image_in_BRESP,
        m_axi_image_in_BID,
        m_axi_image_in_BUSER,
        m_axi_kernel_AWVALID,
        m_axi_kernel_AWREADY,
        m_axi_kernel_AWADDR,
        m_axi_kernel_AWID,
        m_axi_kernel_AWLEN,
        m_axi_kernel_AWSIZE,
        m_axi_kernel_AWBURST,
        m_axi_kernel_AWLOCK,
        m_axi_kernel_AWCACHE,
        m_axi_kernel_AWPROT,
        m_axi_kernel_AWQOS,
        m_axi_kernel_AWREGION,
        m_axi_kernel_AWUSER,
        m_axi_kernel_WVALID,
        m_axi_kernel_WREADY,
        m_axi_kernel_WDATA,
        m_axi_kernel_WSTRB,
        m_axi_kernel_WLAST,
        m_axi_kernel_WID,
        m_axi_kernel_WUSER,
        m_axi_kernel_ARVALID,
        m_axi_kernel_ARREADY,
        m_axi_kernel_ARADDR,
        m_axi_kernel_ARID,
        m_axi_kernel_ARLEN,
        m_axi_kernel_ARSIZE,
        m_axi_kernel_ARBURST,
        m_axi_kernel_ARLOCK,
        m_axi_kernel_ARCACHE,
        m_axi_kernel_ARPROT,
        m_axi_kernel_ARQOS,
        m_axi_kernel_ARREGION,
        m_axi_kernel_ARUSER,
        m_axi_kernel_RVALID,
        m_axi_kernel_RREADY,
        m_axi_kernel_RDATA,
        m_axi_kernel_RLAST,
        m_axi_kernel_RID,
        m_axi_kernel_RUSER,
        m_axi_kernel_RRESP,
        m_axi_kernel_BVALID,
        m_axi_kernel_BREADY,
        m_axi_kernel_BRESP,
        m_axi_kernel_BID,
        m_axi_kernel_BUSER,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 53'd1;
parameter    ap_ST_fsm_state2 = 53'd2;
parameter    ap_ST_fsm_state3 = 53'd4;
parameter    ap_ST_fsm_state4 = 53'd8;
parameter    ap_ST_fsm_state5 = 53'd16;
parameter    ap_ST_fsm_state6 = 53'd32;
parameter    ap_ST_fsm_state7 = 53'd64;
parameter    ap_ST_fsm_state8 = 53'd128;
parameter    ap_ST_fsm_state9 = 53'd256;
parameter    ap_ST_fsm_state10 = 53'd512;
parameter    ap_ST_fsm_state11 = 53'd1024;
parameter    ap_ST_fsm_state12 = 53'd2048;
parameter    ap_ST_fsm_state13 = 53'd4096;
parameter    ap_ST_fsm_state14 = 53'd8192;
parameter    ap_ST_fsm_state15 = 53'd16384;
parameter    ap_ST_fsm_state16 = 53'd32768;
parameter    ap_ST_fsm_state17 = 53'd65536;
parameter    ap_ST_fsm_state18 = 53'd131072;
parameter    ap_ST_fsm_state19 = 53'd262144;
parameter    ap_ST_fsm_state20 = 53'd524288;
parameter    ap_ST_fsm_state21 = 53'd1048576;
parameter    ap_ST_fsm_state22 = 53'd2097152;
parameter    ap_ST_fsm_state23 = 53'd4194304;
parameter    ap_ST_fsm_state24 = 53'd8388608;
parameter    ap_ST_fsm_state25 = 53'd16777216;
parameter    ap_ST_fsm_state26 = 53'd33554432;
parameter    ap_ST_fsm_state27 = 53'd67108864;
parameter    ap_ST_fsm_state28 = 53'd134217728;
parameter    ap_ST_fsm_state29 = 53'd268435456;
parameter    ap_ST_fsm_state30 = 53'd536870912;
parameter    ap_ST_fsm_state31 = 53'd1073741824;
parameter    ap_ST_fsm_state32 = 53'd2147483648;
parameter    ap_ST_fsm_state33 = 53'd4294967296;
parameter    ap_ST_fsm_state34 = 53'd8589934592;
parameter    ap_ST_fsm_state35 = 53'd17179869184;
parameter    ap_ST_fsm_state36 = 53'd34359738368;
parameter    ap_ST_fsm_state37 = 53'd68719476736;
parameter    ap_ST_fsm_state38 = 53'd137438953472;
parameter    ap_ST_fsm_state39 = 53'd274877906944;
parameter    ap_ST_fsm_state40 = 53'd549755813888;
parameter    ap_ST_fsm_state41 = 53'd1099511627776;
parameter    ap_ST_fsm_state42 = 53'd2199023255552;
parameter    ap_ST_fsm_state43 = 53'd4398046511104;
parameter    ap_ST_fsm_state44 = 53'd8796093022208;
parameter    ap_ST_fsm_state45 = 53'd17592186044416;
parameter    ap_ST_fsm_state46 = 53'd35184372088832;
parameter    ap_ST_fsm_state47 = 53'd70368744177664;
parameter    ap_ST_fsm_state48 = 53'd140737488355328;
parameter    ap_ST_fsm_state49 = 53'd281474976710656;
parameter    ap_ST_fsm_state50 = 53'd562949953421312;
parameter    ap_ST_fsm_state51 = 53'd1125899906842624;
parameter    ap_ST_fsm_state52 = 53'd2251799813685248;
parameter    ap_ST_fsm_state53 = 53'd4503599627370496;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_IMAGE_IN_ID_WIDTH = 1;
parameter    C_M_AXI_IMAGE_IN_ADDR_WIDTH = 32;
parameter    C_M_AXI_IMAGE_IN_DATA_WIDTH = 256;
parameter    C_M_AXI_IMAGE_IN_AWUSER_WIDTH = 1;
parameter    C_M_AXI_IMAGE_IN_ARUSER_WIDTH = 1;
parameter    C_M_AXI_IMAGE_IN_WUSER_WIDTH = 1;
parameter    C_M_AXI_IMAGE_IN_RUSER_WIDTH = 1;
parameter    C_M_AXI_IMAGE_IN_BUSER_WIDTH = 1;
parameter    C_M_AXI_IMAGE_IN_USER_VALUE = 0;
parameter    C_M_AXI_IMAGE_IN_PROT_VALUE = 0;
parameter    C_M_AXI_IMAGE_IN_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_IMAGE_OUT_ID_WIDTH = 1;
parameter    C_M_AXI_IMAGE_OUT_ADDR_WIDTH = 32;
parameter    C_M_AXI_IMAGE_OUT_DATA_WIDTH = 32;
parameter    C_M_AXI_IMAGE_OUT_AWUSER_WIDTH = 1;
parameter    C_M_AXI_IMAGE_OUT_ARUSER_WIDTH = 1;
parameter    C_M_AXI_IMAGE_OUT_WUSER_WIDTH = 1;
parameter    C_M_AXI_IMAGE_OUT_RUSER_WIDTH = 1;
parameter    C_M_AXI_IMAGE_OUT_BUSER_WIDTH = 1;
parameter    C_M_AXI_IMAGE_OUT_USER_VALUE = 0;
parameter    C_M_AXI_IMAGE_OUT_PROT_VALUE = 0;
parameter    C_M_AXI_IMAGE_OUT_CACHE_VALUE = 3;
parameter    C_M_AXI_KERNEL_ID_WIDTH = 1;
parameter    C_M_AXI_KERNEL_ADDR_WIDTH = 32;
parameter    C_M_AXI_KERNEL_DATA_WIDTH = 1024;
parameter    C_M_AXI_KERNEL_AWUSER_WIDTH = 1;
parameter    C_M_AXI_KERNEL_ARUSER_WIDTH = 1;
parameter    C_M_AXI_KERNEL_WUSER_WIDTH = 1;
parameter    C_M_AXI_KERNEL_RUSER_WIDTH = 1;
parameter    C_M_AXI_KERNEL_BUSER_WIDTH = 1;
parameter    C_M_AXI_KERNEL_USER_VALUE = 0;
parameter    C_M_AXI_KERNEL_PROT_VALUE = 0;
parameter    C_M_AXI_KERNEL_CACHE_VALUE = 3;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_IMAGE_IN_WSTRB_WIDTH = (256 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_IMAGE_OUT_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_KERNEL_WSTRB_WIDTH = (1024 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_image_out_AWVALID;
input   m_axi_image_out_AWREADY;
output  [C_M_AXI_IMAGE_OUT_ADDR_WIDTH - 1:0] m_axi_image_out_AWADDR;
output  [C_M_AXI_IMAGE_OUT_ID_WIDTH - 1:0] m_axi_image_out_AWID;
output  [7:0] m_axi_image_out_AWLEN;
output  [2:0] m_axi_image_out_AWSIZE;
output  [1:0] m_axi_image_out_AWBURST;
output  [1:0] m_axi_image_out_AWLOCK;
output  [3:0] m_axi_image_out_AWCACHE;
output  [2:0] m_axi_image_out_AWPROT;
output  [3:0] m_axi_image_out_AWQOS;
output  [3:0] m_axi_image_out_AWREGION;
output  [C_M_AXI_IMAGE_OUT_AWUSER_WIDTH - 1:0] m_axi_image_out_AWUSER;
output   m_axi_image_out_WVALID;
input   m_axi_image_out_WREADY;
output  [C_M_AXI_IMAGE_OUT_DATA_WIDTH - 1:0] m_axi_image_out_WDATA;
output  [C_M_AXI_IMAGE_OUT_WSTRB_WIDTH - 1:0] m_axi_image_out_WSTRB;
output   m_axi_image_out_WLAST;
output  [C_M_AXI_IMAGE_OUT_ID_WIDTH - 1:0] m_axi_image_out_WID;
output  [C_M_AXI_IMAGE_OUT_WUSER_WIDTH - 1:0] m_axi_image_out_WUSER;
output   m_axi_image_out_ARVALID;
input   m_axi_image_out_ARREADY;
output  [C_M_AXI_IMAGE_OUT_ADDR_WIDTH - 1:0] m_axi_image_out_ARADDR;
output  [C_M_AXI_IMAGE_OUT_ID_WIDTH - 1:0] m_axi_image_out_ARID;
output  [7:0] m_axi_image_out_ARLEN;
output  [2:0] m_axi_image_out_ARSIZE;
output  [1:0] m_axi_image_out_ARBURST;
output  [1:0] m_axi_image_out_ARLOCK;
output  [3:0] m_axi_image_out_ARCACHE;
output  [2:0] m_axi_image_out_ARPROT;
output  [3:0] m_axi_image_out_ARQOS;
output  [3:0] m_axi_image_out_ARREGION;
output  [C_M_AXI_IMAGE_OUT_ARUSER_WIDTH - 1:0] m_axi_image_out_ARUSER;
input   m_axi_image_out_RVALID;
output   m_axi_image_out_RREADY;
input  [C_M_AXI_IMAGE_OUT_DATA_WIDTH - 1:0] m_axi_image_out_RDATA;
input   m_axi_image_out_RLAST;
input  [C_M_AXI_IMAGE_OUT_ID_WIDTH - 1:0] m_axi_image_out_RID;
input  [C_M_AXI_IMAGE_OUT_RUSER_WIDTH - 1:0] m_axi_image_out_RUSER;
input  [1:0] m_axi_image_out_RRESP;
input   m_axi_image_out_BVALID;
output   m_axi_image_out_BREADY;
input  [1:0] m_axi_image_out_BRESP;
input  [C_M_AXI_IMAGE_OUT_ID_WIDTH - 1:0] m_axi_image_out_BID;
input  [C_M_AXI_IMAGE_OUT_BUSER_WIDTH - 1:0] m_axi_image_out_BUSER;
output   m_axi_image_in_AWVALID;
input   m_axi_image_in_AWREADY;
output  [C_M_AXI_IMAGE_IN_ADDR_WIDTH - 1:0] m_axi_image_in_AWADDR;
output  [C_M_AXI_IMAGE_IN_ID_WIDTH - 1:0] m_axi_image_in_AWID;
output  [7:0] m_axi_image_in_AWLEN;
output  [2:0] m_axi_image_in_AWSIZE;
output  [1:0] m_axi_image_in_AWBURST;
output  [1:0] m_axi_image_in_AWLOCK;
output  [3:0] m_axi_image_in_AWCACHE;
output  [2:0] m_axi_image_in_AWPROT;
output  [3:0] m_axi_image_in_AWQOS;
output  [3:0] m_axi_image_in_AWREGION;
output  [C_M_AXI_IMAGE_IN_AWUSER_WIDTH - 1:0] m_axi_image_in_AWUSER;
output   m_axi_image_in_WVALID;
input   m_axi_image_in_WREADY;
output  [C_M_AXI_IMAGE_IN_DATA_WIDTH - 1:0] m_axi_image_in_WDATA;
output  [C_M_AXI_IMAGE_IN_WSTRB_WIDTH - 1:0] m_axi_image_in_WSTRB;
output   m_axi_image_in_WLAST;
output  [C_M_AXI_IMAGE_IN_ID_WIDTH - 1:0] m_axi_image_in_WID;
output  [C_M_AXI_IMAGE_IN_WUSER_WIDTH - 1:0] m_axi_image_in_WUSER;
output   m_axi_image_in_ARVALID;
input   m_axi_image_in_ARREADY;
output  [C_M_AXI_IMAGE_IN_ADDR_WIDTH - 1:0] m_axi_image_in_ARADDR;
output  [C_M_AXI_IMAGE_IN_ID_WIDTH - 1:0] m_axi_image_in_ARID;
output  [7:0] m_axi_image_in_ARLEN;
output  [2:0] m_axi_image_in_ARSIZE;
output  [1:0] m_axi_image_in_ARBURST;
output  [1:0] m_axi_image_in_ARLOCK;
output  [3:0] m_axi_image_in_ARCACHE;
output  [2:0] m_axi_image_in_ARPROT;
output  [3:0] m_axi_image_in_ARQOS;
output  [3:0] m_axi_image_in_ARREGION;
output  [C_M_AXI_IMAGE_IN_ARUSER_WIDTH - 1:0] m_axi_image_in_ARUSER;
input   m_axi_image_in_RVALID;
output   m_axi_image_in_RREADY;
input  [C_M_AXI_IMAGE_IN_DATA_WIDTH - 1:0] m_axi_image_in_RDATA;
input   m_axi_image_in_RLAST;
input  [C_M_AXI_IMAGE_IN_ID_WIDTH - 1:0] m_axi_image_in_RID;
input  [C_M_AXI_IMAGE_IN_RUSER_WIDTH - 1:0] m_axi_image_in_RUSER;
input  [1:0] m_axi_image_in_RRESP;
input   m_axi_image_in_BVALID;
output   m_axi_image_in_BREADY;
input  [1:0] m_axi_image_in_BRESP;
input  [C_M_AXI_IMAGE_IN_ID_WIDTH - 1:0] m_axi_image_in_BID;
input  [C_M_AXI_IMAGE_IN_BUSER_WIDTH - 1:0] m_axi_image_in_BUSER;
output   m_axi_kernel_AWVALID;
input   m_axi_kernel_AWREADY;
output  [C_M_AXI_KERNEL_ADDR_WIDTH - 1:0] m_axi_kernel_AWADDR;
output  [C_M_AXI_KERNEL_ID_WIDTH - 1:0] m_axi_kernel_AWID;
output  [7:0] m_axi_kernel_AWLEN;
output  [2:0] m_axi_kernel_AWSIZE;
output  [1:0] m_axi_kernel_AWBURST;
output  [1:0] m_axi_kernel_AWLOCK;
output  [3:0] m_axi_kernel_AWCACHE;
output  [2:0] m_axi_kernel_AWPROT;
output  [3:0] m_axi_kernel_AWQOS;
output  [3:0] m_axi_kernel_AWREGION;
output  [C_M_AXI_KERNEL_AWUSER_WIDTH - 1:0] m_axi_kernel_AWUSER;
output   m_axi_kernel_WVALID;
input   m_axi_kernel_WREADY;
output  [C_M_AXI_KERNEL_DATA_WIDTH - 1:0] m_axi_kernel_WDATA;
output  [C_M_AXI_KERNEL_WSTRB_WIDTH - 1:0] m_axi_kernel_WSTRB;
output   m_axi_kernel_WLAST;
output  [C_M_AXI_KERNEL_ID_WIDTH - 1:0] m_axi_kernel_WID;
output  [C_M_AXI_KERNEL_WUSER_WIDTH - 1:0] m_axi_kernel_WUSER;
output   m_axi_kernel_ARVALID;
input   m_axi_kernel_ARREADY;
output  [C_M_AXI_KERNEL_ADDR_WIDTH - 1:0] m_axi_kernel_ARADDR;
output  [C_M_AXI_KERNEL_ID_WIDTH - 1:0] m_axi_kernel_ARID;
output  [7:0] m_axi_kernel_ARLEN;
output  [2:0] m_axi_kernel_ARSIZE;
output  [1:0] m_axi_kernel_ARBURST;
output  [1:0] m_axi_kernel_ARLOCK;
output  [3:0] m_axi_kernel_ARCACHE;
output  [2:0] m_axi_kernel_ARPROT;
output  [3:0] m_axi_kernel_ARQOS;
output  [3:0] m_axi_kernel_ARREGION;
output  [C_M_AXI_KERNEL_ARUSER_WIDTH - 1:0] m_axi_kernel_ARUSER;
input   m_axi_kernel_RVALID;
output   m_axi_kernel_RREADY;
input  [C_M_AXI_KERNEL_DATA_WIDTH - 1:0] m_axi_kernel_RDATA;
input   m_axi_kernel_RLAST;
input  [C_M_AXI_KERNEL_ID_WIDTH - 1:0] m_axi_kernel_RID;
input  [C_M_AXI_KERNEL_RUSER_WIDTH - 1:0] m_axi_kernel_RUSER;
input  [1:0] m_axi_kernel_RRESP;
input   m_axi_kernel_BVALID;
output   m_axi_kernel_BREADY;
input  [1:0] m_axi_kernel_BRESP;
input  [C_M_AXI_KERNEL_ID_WIDTH - 1:0] m_axi_kernel_BID;
input  [C_M_AXI_KERNEL_BUSER_WIDTH - 1:0] m_axi_kernel_BUSER;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [52:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] image_out_offset;
wire   [31:0] image_in_offset;
wire   [31:0] rows;
wire   [31:0] cols;
wire   [31:0] kernel_offset;
wire   [31:0] kernel_dim;
wire   [31:0] stride_row;
wire   [31:0] stride_col;
wire   [7:0] padding;
reg    image_out_blk_n_AW;
wire    ap_CS_fsm_state47;
reg    image_out_blk_n_W;
wire    ap_CS_fsm_state48;
reg    image_out_blk_n_B;
wire    ap_CS_fsm_state53;
reg   [7:0] padding_read_reg_381;
reg   [31:0] stride_col_read_reg_386;
reg   [31:0] stride_row_read_reg_393;
reg   [31:0] kernel_dim_read_reg_399;
reg   [31:0] kernel_offset_read_reg_406;
reg   [31:0] cols_read_reg_412;
reg   [31:0] rows_read_reg_421;
reg   [31:0] image_in_offset_read_reg_429;
reg   [31:0] image_out_offset_read_reg_434;
reg   [30:0] half_kernel_dim_reg_451;
wire   [63:0] zext_ln7_fu_271_p1;
wire    ap_CS_fsm_state2;
wire   [63:0] grp_fu_248_p2;
reg   [63:0] mul_ln7_reg_463;
wire    ap_CS_fsm_state3;
wire   [31:0] zext_ln40_fu_279_p1;
reg   [31:0] zext_ln40_reg_472;
wire    ap_CS_fsm_state6;
wire   [31:0] newRow_4_fu_282_p2;
reg   [31:0] newRow_4_reg_477;
wire   [31:0] empty_fu_287_p2;
reg   [31:0] empty_reg_482;
wire   [31:0] newCol_2_fu_292_p2;
reg   [31:0] newCol_2_reg_487;
wire   [31:0] empty_31_fu_297_p2;
reg   [31:0] empty_31_reg_492;
wire    ap_CS_fsm_state7;
wire   [31:0] add28_fu_310_p2;
reg   [31:0] add28_reg_505;
wire   [31:0] col_1_fu_333_p2;
reg   [31:0] col_1_reg_513;
wire    ap_CS_fsm_state8;
wire  signed [31:0] grp_fu_320_p2;
reg  signed [31:0] udiv_ln68_reg_521;
wire    ap_CS_fsm_state43;
wire  signed [31:0] grp_fu_324_p2;
reg  signed [31:0] udiv_ln68_1_reg_526;
wire   [31:0] grp_fu_328_p2;
reg   [31:0] udiv_ln68_2_reg_531;
wire   [31:0] grp_fu_252_p2;
reg   [31:0] mul_ln68_reg_536;
wire    ap_CS_fsm_state45;
wire   [7:0] grp_fu_350_p2;
reg   [7:0] udiv_ln69_reg_541;
reg   [31:0] image_out_addr_reg_546;
wire    ap_CS_fsm_state46;
wire    grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_ap_start;
wire    grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_ap_done;
wire    grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_ap_idle;
wire    grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_ap_ready;
wire    grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_AWVALID;
wire   [31:0] grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_AWADDR;
wire   [0:0] grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_AWID;
wire   [31:0] grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_AWLEN;
wire   [2:0] grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_AWSIZE;
wire   [1:0] grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_AWBURST;
wire   [1:0] grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_AWLOCK;
wire   [3:0] grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_AWCACHE;
wire   [2:0] grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_AWPROT;
wire   [3:0] grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_AWQOS;
wire   [3:0] grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_AWREGION;
wire   [0:0] grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_AWUSER;
wire    grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_WVALID;
wire   [7:0] grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_WDATA;
wire   [0:0] grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_WSTRB;
wire    grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_WLAST;
wire   [0:0] grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_WID;
wire   [0:0] grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_WUSER;
wire    grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_ARVALID;
wire   [31:0] grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_ARADDR;
wire   [0:0] grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_ARID;
wire   [31:0] grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_ARLEN;
wire   [2:0] grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_ARSIZE;
wire   [1:0] grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_ARBURST;
wire   [1:0] grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_ARLOCK;
wire   [3:0] grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_ARCACHE;
wire   [2:0] grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_ARPROT;
wire   [3:0] grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_ARQOS;
wire   [3:0] grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_ARREGION;
wire   [0:0] grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_ARUSER;
wire    grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_RREADY;
wire    grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_BREADY;
wire   [31:0] grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_div_1_out;
wire    grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_div_1_out_ap_vld;
wire  signed [31:0] grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_grp_fu_252_p_din0;
wire  signed [31:0] grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_grp_fu_252_p_din1;
wire    grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_grp_fu_252_p_ce;
wire    grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_ap_start;
wire    grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_ap_done;
wire    grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_ap_idle;
wire    grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_ap_ready;
wire    grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_AWVALID;
wire   [31:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_AWADDR;
wire   [0:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_AWID;
wire   [31:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_AWLEN;
wire   [2:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_AWSIZE;
wire   [1:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_AWBURST;
wire   [1:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_AWLOCK;
wire   [3:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_AWCACHE;
wire   [2:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_AWPROT;
wire   [3:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_AWQOS;
wire   [3:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_AWREGION;
wire   [0:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_AWUSER;
wire    grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_WVALID;
wire   [7:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_WDATA;
wire   [0:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_WSTRB;
wire    grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_WLAST;
wire   [0:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_WID;
wire   [0:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_WUSER;
wire    grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_ARVALID;
wire   [31:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_ARADDR;
wire   [0:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_ARID;
wire   [31:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_ARLEN;
wire   [2:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_ARSIZE;
wire   [1:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_ARBURST;
wire   [1:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_ARLOCK;
wire   [3:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_ARCACHE;
wire   [2:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_ARPROT;
wire   [3:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_ARQOS;
wire   [3:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_ARREGION;
wire   [0:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_ARUSER;
wire    grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_RREADY;
wire    grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_BREADY;
wire    grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_AWVALID;
wire   [31:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_AWADDR;
wire   [0:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_AWID;
wire   [31:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_AWLEN;
wire   [2:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_AWSIZE;
wire   [1:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_AWBURST;
wire   [1:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_AWLOCK;
wire   [3:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_AWCACHE;
wire   [2:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_AWPROT;
wire   [3:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_AWQOS;
wire   [3:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_AWREGION;
wire   [0:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_AWUSER;
wire    grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_WVALID;
wire   [7:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_WDATA;
wire   [0:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_WSTRB;
wire    grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_WLAST;
wire   [0:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_WID;
wire   [0:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_WUSER;
wire    grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_ARVALID;
wire   [31:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_ARADDR;
wire   [0:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_ARID;
wire   [31:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_ARLEN;
wire   [2:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_ARSIZE;
wire   [1:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_ARBURST;
wire   [1:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_ARLOCK;
wire   [3:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_ARCACHE;
wire   [2:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_ARPROT;
wire   [3:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_ARQOS;
wire   [3:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_ARREGION;
wire   [0:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_ARUSER;
wire    grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_RREADY;
wire    grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_BREADY;
wire   [31:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_sum_1_out;
wire    grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_sum_1_out_ap_vld;
wire  signed [31:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_grp_fu_252_p_din0;
wire  signed [31:0] grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_grp_fu_252_p_din1;
wire    grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_grp_fu_252_p_ce;
reg    m_axi_image_in_cache_flush;
wire    image_in_AWREADY;
wire    image_in_WREADY;
reg    image_in_ARVALID;
wire    image_in_ARREADY;
wire    image_in_RVALID;
reg    image_in_RREADY;
wire   [7:0] image_in_RDATA;
wire   [10:0] image_in_RFIFONUM;
wire    image_in_BVALID;
reg    image_out_AWVALID;
wire    image_out_AWREADY;
reg    image_out_WVALID;
wire    image_out_WREADY;
wire   [7:0] image_out_WDATA;
wire    image_out_ARREADY;
wire    image_out_RVALID;
wire   [7:0] image_out_RDATA;
wire   [10:0] image_out_RFIFONUM;
wire    image_out_BVALID;
reg    image_out_BREADY;
reg    m_axi_kernel_cache_flush;
wire    kernel_AWREADY;
wire    kernel_WREADY;
reg    kernel_ARVALID;
wire    kernel_ARREADY;
reg   [31:0] kernel_ARADDR;
reg   [31:0] kernel_ARLEN;
wire    kernel_RVALID;
reg    kernel_RREADY;
wire   [7:0] kernel_RDATA;
wire   [10:0] kernel_RFIFONUM;
wire    kernel_BVALID;
reg   [31:0] col_reg_202;
wire   [0:0] icmp_ln42_fu_305_p2;
reg    grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_ap_start_reg;
reg   [52:0] ap_NS_fsm;
wire    ap_NS_fsm_state4;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
reg    grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_ap_start_reg;
wire   [0:0] icmp_ln44_fu_315_p2;
wire    ap_CS_fsm_state9;
wire   [31:0] add_ln69_fu_359_p2;
reg   [31:0] row_fu_120;
wire   [31:0] row_3_fu_338_p2;
wire    ap_CS_fsm_state10;
wire   [31:0] grp_fu_248_p0;
wire   [31:0] grp_fu_248_p1;
reg  signed [31:0] grp_fu_252_p0;
reg  signed [31:0] grp_fu_252_p1;
wire    ap_CS_fsm_state44;
wire   [31:0] add_ln69_1_fu_355_p2;
reg    grp_fu_252_ce;
reg    grp_fu_320_ap_start;
wire    grp_fu_320_ap_done;
reg    grp_fu_320_ce;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state50;
wire    ap_CS_fsm_state51;
wire    ap_CS_fsm_state52;
reg    grp_fu_324_ap_start;
wire    grp_fu_324_ap_done;
reg    grp_fu_324_ce;
reg    grp_fu_328_ap_start;
wire    grp_fu_328_ap_done;
reg    grp_fu_328_ce;
reg    grp_fu_350_ap_start;
wire    grp_fu_350_ap_done;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
reg    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
reg    ap_ST_fsm_state47_blk;
reg    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
reg    ap_ST_fsm_state53_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 53'd1;
#0 grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_ap_start_reg = 1'b0;
#0 grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_ap_start_reg = 1'b0;
#0 row_fu_120 = 32'd0;
end

LinearImageFilter_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_ap_start),
    .ap_done(grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_ap_done),
    .ap_idle(grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_ap_idle),
    .ap_ready(grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_ap_ready),
    .m_axi_kernel_AWVALID(grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_AWVALID),
    .m_axi_kernel_AWREADY(1'b0),
    .m_axi_kernel_AWADDR(grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_AWADDR),
    .m_axi_kernel_AWID(grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_AWID),
    .m_axi_kernel_AWLEN(grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_AWLEN),
    .m_axi_kernel_AWSIZE(grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_AWSIZE),
    .m_axi_kernel_AWBURST(grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_AWBURST),
    .m_axi_kernel_AWLOCK(grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_AWLOCK),
    .m_axi_kernel_AWCACHE(grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_AWCACHE),
    .m_axi_kernel_AWPROT(grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_AWPROT),
    .m_axi_kernel_AWQOS(grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_AWQOS),
    .m_axi_kernel_AWREGION(grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_AWREGION),
    .m_axi_kernel_AWUSER(grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_AWUSER),
    .m_axi_kernel_WVALID(grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_WVALID),
    .m_axi_kernel_WREADY(1'b0),
    .m_axi_kernel_WDATA(grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_WDATA),
    .m_axi_kernel_WSTRB(grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_WSTRB),
    .m_axi_kernel_WLAST(grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_WLAST),
    .m_axi_kernel_WID(grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_WID),
    .m_axi_kernel_WUSER(grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_WUSER),
    .m_axi_kernel_ARVALID(grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_ARVALID),
    .m_axi_kernel_ARREADY(kernel_ARREADY),
    .m_axi_kernel_ARADDR(grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_ARADDR),
    .m_axi_kernel_ARID(grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_ARID),
    .m_axi_kernel_ARLEN(grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_ARLEN),
    .m_axi_kernel_ARSIZE(grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_ARSIZE),
    .m_axi_kernel_ARBURST(grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_ARBURST),
    .m_axi_kernel_ARLOCK(grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_ARLOCK),
    .m_axi_kernel_ARCACHE(grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_ARCACHE),
    .m_axi_kernel_ARPROT(grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_ARPROT),
    .m_axi_kernel_ARQOS(grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_ARQOS),
    .m_axi_kernel_ARREGION(grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_ARREGION),
    .m_axi_kernel_ARUSER(grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_ARUSER),
    .m_axi_kernel_RVALID(kernel_RVALID),
    .m_axi_kernel_RREADY(grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_RREADY),
    .m_axi_kernel_RDATA(kernel_RDATA),
    .m_axi_kernel_RLAST(1'b0),
    .m_axi_kernel_RID(1'd0),
    .m_axi_kernel_RFIFONUM(kernel_RFIFONUM),
    .m_axi_kernel_RUSER(1'd0),
    .m_axi_kernel_RRESP(2'd0),
    .m_axi_kernel_BVALID(1'b0),
    .m_axi_kernel_BREADY(grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_BREADY),
    .m_axi_kernel_BRESP(2'd0),
    .m_axi_kernel_BID(1'd0),
    .m_axi_kernel_BUSER(1'd0),
    .mul_ln7(mul_ln7_reg_463),
    .kernel_dim(kernel_dim_read_reg_399),
    .kernel_offset(kernel_offset_read_reg_406),
    .div_1_out(grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_div_1_out),
    .div_1_out_ap_vld(grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_div_1_out_ap_vld),
    .grp_fu_252_p_din0(grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_grp_fu_252_p_din0),
    .grp_fu_252_p_din1(grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_grp_fu_252_p_din1),
    .grp_fu_252_p_dout0(grp_fu_252_p2),
    .grp_fu_252_p_ce(grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_grp_fu_252_p_ce)
);

LinearImageFilter_LinearImageFilter_Pipeline_ker_rows_ker_cols grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_ap_start),
    .ap_done(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_ap_done),
    .ap_idle(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_ap_idle),
    .ap_ready(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_ap_ready),
    .m_axi_kernel_AWVALID(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_AWVALID),
    .m_axi_kernel_AWREADY(1'b0),
    .m_axi_kernel_AWADDR(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_AWADDR),
    .m_axi_kernel_AWID(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_AWID),
    .m_axi_kernel_AWLEN(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_AWLEN),
    .m_axi_kernel_AWSIZE(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_AWSIZE),
    .m_axi_kernel_AWBURST(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_AWBURST),
    .m_axi_kernel_AWLOCK(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_AWLOCK),
    .m_axi_kernel_AWCACHE(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_AWCACHE),
    .m_axi_kernel_AWPROT(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_AWPROT),
    .m_axi_kernel_AWQOS(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_AWQOS),
    .m_axi_kernel_AWREGION(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_AWREGION),
    .m_axi_kernel_AWUSER(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_AWUSER),
    .m_axi_kernel_WVALID(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_WVALID),
    .m_axi_kernel_WREADY(1'b0),
    .m_axi_kernel_WDATA(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_WDATA),
    .m_axi_kernel_WSTRB(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_WSTRB),
    .m_axi_kernel_WLAST(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_WLAST),
    .m_axi_kernel_WID(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_WID),
    .m_axi_kernel_WUSER(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_WUSER),
    .m_axi_kernel_ARVALID(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_ARVALID),
    .m_axi_kernel_ARREADY(kernel_ARREADY),
    .m_axi_kernel_ARADDR(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_ARADDR),
    .m_axi_kernel_ARID(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_ARID),
    .m_axi_kernel_ARLEN(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_ARLEN),
    .m_axi_kernel_ARSIZE(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_ARSIZE),
    .m_axi_kernel_ARBURST(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_ARBURST),
    .m_axi_kernel_ARLOCK(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_ARLOCK),
    .m_axi_kernel_ARCACHE(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_ARCACHE),
    .m_axi_kernel_ARPROT(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_ARPROT),
    .m_axi_kernel_ARQOS(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_ARQOS),
    .m_axi_kernel_ARREGION(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_ARREGION),
    .m_axi_kernel_ARUSER(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_ARUSER),
    .m_axi_kernel_RVALID(kernel_RVALID),
    .m_axi_kernel_RREADY(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_RREADY),
    .m_axi_kernel_RDATA(kernel_RDATA),
    .m_axi_kernel_RLAST(1'b0),
    .m_axi_kernel_RID(1'd0),
    .m_axi_kernel_RFIFONUM(kernel_RFIFONUM),
    .m_axi_kernel_RUSER(1'd0),
    .m_axi_kernel_RRESP(2'd0),
    .m_axi_kernel_BVALID(1'b0),
    .m_axi_kernel_BREADY(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_BREADY),
    .m_axi_kernel_BRESP(2'd0),
    .m_axi_kernel_BID(1'd0),
    .m_axi_kernel_BUSER(1'd0),
    .m_axi_image_in_AWVALID(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_AWVALID),
    .m_axi_image_in_AWREADY(1'b0),
    .m_axi_image_in_AWADDR(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_AWADDR),
    .m_axi_image_in_AWID(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_AWID),
    .m_axi_image_in_AWLEN(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_AWLEN),
    .m_axi_image_in_AWSIZE(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_AWSIZE),
    .m_axi_image_in_AWBURST(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_AWBURST),
    .m_axi_image_in_AWLOCK(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_AWLOCK),
    .m_axi_image_in_AWCACHE(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_AWCACHE),
    .m_axi_image_in_AWPROT(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_AWPROT),
    .m_axi_image_in_AWQOS(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_AWQOS),
    .m_axi_image_in_AWREGION(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_AWREGION),
    .m_axi_image_in_AWUSER(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_AWUSER),
    .m_axi_image_in_WVALID(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_WVALID),
    .m_axi_image_in_WREADY(1'b0),
    .m_axi_image_in_WDATA(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_WDATA),
    .m_axi_image_in_WSTRB(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_WSTRB),
    .m_axi_image_in_WLAST(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_WLAST),
    .m_axi_image_in_WID(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_WID),
    .m_axi_image_in_WUSER(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_WUSER),
    .m_axi_image_in_ARVALID(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_ARVALID),
    .m_axi_image_in_ARREADY(image_in_ARREADY),
    .m_axi_image_in_ARADDR(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_ARADDR),
    .m_axi_image_in_ARID(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_ARID),
    .m_axi_image_in_ARLEN(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_ARLEN),
    .m_axi_image_in_ARSIZE(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_ARSIZE),
    .m_axi_image_in_ARBURST(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_ARBURST),
    .m_axi_image_in_ARLOCK(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_ARLOCK),
    .m_axi_image_in_ARCACHE(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_ARCACHE),
    .m_axi_image_in_ARPROT(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_ARPROT),
    .m_axi_image_in_ARQOS(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_ARQOS),
    .m_axi_image_in_ARREGION(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_ARREGION),
    .m_axi_image_in_ARUSER(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_ARUSER),
    .m_axi_image_in_RVALID(image_in_RVALID),
    .m_axi_image_in_RREADY(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_RREADY),
    .m_axi_image_in_RDATA(image_in_RDATA),
    .m_axi_image_in_RLAST(1'b0),
    .m_axi_image_in_RID(1'd0),
    .m_axi_image_in_RFIFONUM(image_in_RFIFONUM),
    .m_axi_image_in_RUSER(1'd0),
    .m_axi_image_in_RRESP(2'd0),
    .m_axi_image_in_BVALID(1'b0),
    .m_axi_image_in_BREADY(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_BREADY),
    .m_axi_image_in_BRESP(2'd0),
    .m_axi_image_in_BID(1'd0),
    .m_axi_image_in_BUSER(1'd0),
    .mul_ln7(mul_ln7_reg_463),
    .padding(padding_read_reg_381),
    .kernel_dim(kernel_dim_read_reg_399),
    .add28(add28_reg_505),
    .rows(rows_read_reg_421),
    .newRow_4(newRow_4_reg_477),
    .col(col_reg_202),
    .half_kernel_dim_1(half_kernel_dim_reg_451),
    .cols(cols_read_reg_412),
    .image_in_offset(image_in_offset_read_reg_429),
    .kernel_offset(kernel_offset_read_reg_406),
    .newCol_2(newCol_2_reg_487),
    .empty_26(empty_reg_482),
    .empty(empty_31_reg_492),
    .sum_1_out(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_sum_1_out),
    .sum_1_out_ap_vld(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_sum_1_out_ap_vld),
    .grp_fu_252_p_din0(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_grp_fu_252_p_din0),
    .grp_fu_252_p_din1(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_grp_fu_252_p_din1),
    .grp_fu_252_p_dout0(grp_fu_252_p2),
    .grp_fu_252_p_ce(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_grp_fu_252_p_ce)
);

LinearImageFilter_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .image_out_offset(image_out_offset),
    .image_in_offset(image_in_offset),
    .rows(rows),
    .cols(cols),
    .kernel_offset(kernel_offset),
    .kernel_dim(kernel_dim),
    .stride_row(stride_row),
    .stride_col(stride_col),
    .padding(padding),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

LinearImageFilter_image_in_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 7 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_IMAGE_IN_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_IMAGE_IN_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_IMAGE_IN_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_IMAGE_IN_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_IMAGE_IN_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_IMAGE_IN_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_IMAGE_IN_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_IMAGE_IN_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_IMAGE_IN_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_IMAGE_IN_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_IMAGE_IN_CACHE_VALUE ),
    .USER_RFIFONUM_WIDTH( 11 ),
    .USER_DW( 8 ),
    .USER_AW( 32 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
image_in_m_axi_U(
    .AWVALID(m_axi_image_in_AWVALID),
    .AWREADY(m_axi_image_in_AWREADY),
    .AWADDR(m_axi_image_in_AWADDR),
    .AWID(m_axi_image_in_AWID),
    .AWLEN(m_axi_image_in_AWLEN),
    .AWSIZE(m_axi_image_in_AWSIZE),
    .AWBURST(m_axi_image_in_AWBURST),
    .AWLOCK(m_axi_image_in_AWLOCK),
    .AWCACHE(m_axi_image_in_AWCACHE),
    .AWPROT(m_axi_image_in_AWPROT),
    .AWQOS(m_axi_image_in_AWQOS),
    .AWREGION(m_axi_image_in_AWREGION),
    .AWUSER(m_axi_image_in_AWUSER),
    .WVALID(m_axi_image_in_WVALID),
    .WREADY(m_axi_image_in_WREADY),
    .WDATA(m_axi_image_in_WDATA),
    .WSTRB(m_axi_image_in_WSTRB),
    .WLAST(m_axi_image_in_WLAST),
    .WID(m_axi_image_in_WID),
    .WUSER(m_axi_image_in_WUSER),
    .ARVALID(m_axi_image_in_ARVALID),
    .ARREADY(m_axi_image_in_ARREADY),
    .ARADDR(m_axi_image_in_ARADDR),
    .ARID(m_axi_image_in_ARID),
    .ARLEN(m_axi_image_in_ARLEN),
    .ARSIZE(m_axi_image_in_ARSIZE),
    .ARBURST(m_axi_image_in_ARBURST),
    .ARLOCK(m_axi_image_in_ARLOCK),
    .ARCACHE(m_axi_image_in_ARCACHE),
    .ARPROT(m_axi_image_in_ARPROT),
    .ARQOS(m_axi_image_in_ARQOS),
    .ARREGION(m_axi_image_in_ARREGION),
    .ARUSER(m_axi_image_in_ARUSER),
    .RVALID(m_axi_image_in_RVALID),
    .RREADY(m_axi_image_in_RREADY),
    .RDATA(m_axi_image_in_RDATA),
    .RLAST(m_axi_image_in_RLAST),
    .RID(m_axi_image_in_RID),
    .RUSER(m_axi_image_in_RUSER),
    .RRESP(m_axi_image_in_RRESP),
    .BVALID(m_axi_image_in_BVALID),
    .BREADY(m_axi_image_in_BREADY),
    .BRESP(m_axi_image_in_BRESP),
    .BID(m_axi_image_in_BID),
    .BUSER(m_axi_image_in_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .cache_flush(m_axi_image_in_cache_flush),
    .I_ARVALID(image_in_ARVALID),
    .I_ARREADY(image_in_ARREADY),
    .I_ARADDR(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_ARADDR),
    .I_ARLEN(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_ARLEN),
    .I_RVALID(image_in_RVALID),
    .I_RREADY(image_in_RREADY),
    .I_RDATA(image_in_RDATA),
    .I_RFIFONUM(image_in_RFIFONUM),
    .I_AWVALID(1'b0),
    .I_AWREADY(image_in_AWREADY),
    .I_AWADDR(32'd0),
    .I_AWLEN(32'd0),
    .I_WVALID(1'b0),
    .I_WREADY(image_in_WREADY),
    .I_WDATA(8'd0),
    .I_WSTRB(1'd0),
    .I_BVALID(image_in_BVALID),
    .I_BREADY(1'b0)
);

LinearImageFilter_image_out_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 4 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_IMAGE_OUT_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_IMAGE_OUT_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_IMAGE_OUT_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_IMAGE_OUT_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_IMAGE_OUT_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_IMAGE_OUT_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_IMAGE_OUT_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_IMAGE_OUT_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_IMAGE_OUT_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_IMAGE_OUT_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_IMAGE_OUT_CACHE_VALUE ),
    .USER_RFIFONUM_WIDTH( 11 ),
    .USER_DW( 8 ),
    .USER_AW( 32 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
image_out_m_axi_U(
    .AWVALID(m_axi_image_out_AWVALID),
    .AWREADY(m_axi_image_out_AWREADY),
    .AWADDR(m_axi_image_out_AWADDR),
    .AWID(m_axi_image_out_AWID),
    .AWLEN(m_axi_image_out_AWLEN),
    .AWSIZE(m_axi_image_out_AWSIZE),
    .AWBURST(m_axi_image_out_AWBURST),
    .AWLOCK(m_axi_image_out_AWLOCK),
    .AWCACHE(m_axi_image_out_AWCACHE),
    .AWPROT(m_axi_image_out_AWPROT),
    .AWQOS(m_axi_image_out_AWQOS),
    .AWREGION(m_axi_image_out_AWREGION),
    .AWUSER(m_axi_image_out_AWUSER),
    .WVALID(m_axi_image_out_WVALID),
    .WREADY(m_axi_image_out_WREADY),
    .WDATA(m_axi_image_out_WDATA),
    .WSTRB(m_axi_image_out_WSTRB),
    .WLAST(m_axi_image_out_WLAST),
    .WID(m_axi_image_out_WID),
    .WUSER(m_axi_image_out_WUSER),
    .ARVALID(m_axi_image_out_ARVALID),
    .ARREADY(m_axi_image_out_ARREADY),
    .ARADDR(m_axi_image_out_ARADDR),
    .ARID(m_axi_image_out_ARID),
    .ARLEN(m_axi_image_out_ARLEN),
    .ARSIZE(m_axi_image_out_ARSIZE),
    .ARBURST(m_axi_image_out_ARBURST),
    .ARLOCK(m_axi_image_out_ARLOCK),
    .ARCACHE(m_axi_image_out_ARCACHE),
    .ARPROT(m_axi_image_out_ARPROT),
    .ARQOS(m_axi_image_out_ARQOS),
    .ARREGION(m_axi_image_out_ARREGION),
    .ARUSER(m_axi_image_out_ARUSER),
    .RVALID(m_axi_image_out_RVALID),
    .RREADY(m_axi_image_out_RREADY),
    .RDATA(m_axi_image_out_RDATA),
    .RLAST(m_axi_image_out_RLAST),
    .RID(m_axi_image_out_RID),
    .RUSER(m_axi_image_out_RUSER),
    .RRESP(m_axi_image_out_RRESP),
    .BVALID(m_axi_image_out_BVALID),
    .BREADY(m_axi_image_out_BREADY),
    .BRESP(m_axi_image_out_BRESP),
    .BID(m_axi_image_out_BID),
    .BUSER(m_axi_image_out_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(image_out_ARREADY),
    .I_ARADDR(32'd0),
    .I_ARLEN(32'd0),
    .I_RVALID(image_out_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(image_out_RDATA),
    .I_RFIFONUM(image_out_RFIFONUM),
    .I_AWVALID(image_out_AWVALID),
    .I_AWREADY(image_out_AWREADY),
    .I_AWADDR(image_out_addr_reg_546),
    .I_AWLEN(32'd1),
    .I_WVALID(image_out_WVALID),
    .I_WREADY(image_out_WREADY),
    .I_WDATA(image_out_WDATA),
    .I_WSTRB(1'd1),
    .I_BVALID(image_out_BVALID),
    .I_BREADY(image_out_BREADY)
);

LinearImageFilter_kernel_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 7 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_KERNEL_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_KERNEL_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_KERNEL_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_KERNEL_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_KERNEL_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_KERNEL_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_KERNEL_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_KERNEL_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_KERNEL_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_KERNEL_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_KERNEL_CACHE_VALUE ),
    .USER_RFIFONUM_WIDTH( 11 ),
    .USER_DW( 8 ),
    .USER_AW( 32 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
kernel_m_axi_U(
    .AWVALID(m_axi_kernel_AWVALID),
    .AWREADY(m_axi_kernel_AWREADY),
    .AWADDR(m_axi_kernel_AWADDR),
    .AWID(m_axi_kernel_AWID),
    .AWLEN(m_axi_kernel_AWLEN),
    .AWSIZE(m_axi_kernel_AWSIZE),
    .AWBURST(m_axi_kernel_AWBURST),
    .AWLOCK(m_axi_kernel_AWLOCK),
    .AWCACHE(m_axi_kernel_AWCACHE),
    .AWPROT(m_axi_kernel_AWPROT),
    .AWQOS(m_axi_kernel_AWQOS),
    .AWREGION(m_axi_kernel_AWREGION),
    .AWUSER(m_axi_kernel_AWUSER),
    .WVALID(m_axi_kernel_WVALID),
    .WREADY(m_axi_kernel_WREADY),
    .WDATA(m_axi_kernel_WDATA),
    .WSTRB(m_axi_kernel_WSTRB),
    .WLAST(m_axi_kernel_WLAST),
    .WID(m_axi_kernel_WID),
    .WUSER(m_axi_kernel_WUSER),
    .ARVALID(m_axi_kernel_ARVALID),
    .ARREADY(m_axi_kernel_ARREADY),
    .ARADDR(m_axi_kernel_ARADDR),
    .ARID(m_axi_kernel_ARID),
    .ARLEN(m_axi_kernel_ARLEN),
    .ARSIZE(m_axi_kernel_ARSIZE),
    .ARBURST(m_axi_kernel_ARBURST),
    .ARLOCK(m_axi_kernel_ARLOCK),
    .ARCACHE(m_axi_kernel_ARCACHE),
    .ARPROT(m_axi_kernel_ARPROT),
    .ARQOS(m_axi_kernel_ARQOS),
    .ARREGION(m_axi_kernel_ARREGION),
    .ARUSER(m_axi_kernel_ARUSER),
    .RVALID(m_axi_kernel_RVALID),
    .RREADY(m_axi_kernel_RREADY),
    .RDATA(m_axi_kernel_RDATA),
    .RLAST(m_axi_kernel_RLAST),
    .RID(m_axi_kernel_RID),
    .RUSER(m_axi_kernel_RUSER),
    .RRESP(m_axi_kernel_RRESP),
    .BVALID(m_axi_kernel_BVALID),
    .BREADY(m_axi_kernel_BREADY),
    .BRESP(m_axi_kernel_BRESP),
    .BID(m_axi_kernel_BID),
    .BUSER(m_axi_kernel_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .cache_flush(m_axi_kernel_cache_flush),
    .I_ARVALID(kernel_ARVALID),
    .I_ARREADY(kernel_ARREADY),
    .I_ARADDR(kernel_ARADDR),
    .I_ARLEN(kernel_ARLEN),
    .I_RVALID(kernel_RVALID),
    .I_RREADY(kernel_RREADY),
    .I_RDATA(kernel_RDATA),
    .I_RFIFONUM(kernel_RFIFONUM),
    .I_AWVALID(1'b0),
    .I_AWREADY(kernel_AWREADY),
    .I_AWADDR(32'd0),
    .I_AWLEN(32'd0),
    .I_WVALID(1'b0),
    .I_WREADY(kernel_WREADY),
    .I_WDATA(8'd0),
    .I_WSTRB(1'd0),
    .I_BVALID(kernel_BVALID),
    .I_BREADY(1'b0)
);

LinearImageFilter_mul_32ns_32ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_2_1_U28(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_248_p0),
    .din1(grp_fu_248_p1),
    .ce(1'b1),
    .dout(grp_fu_248_p2)
);

LinearImageFilter_mul_32s_32s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_2_1_U29(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_252_p0),
    .din1(grp_fu_252_p1),
    .ce(grp_fu_252_ce),
    .dout(grp_fu_252_p2)
);

LinearImageFilter_udiv_32ns_32ns_32_36_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
udiv_32ns_32ns_32_36_seq_1_U30(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_320_ap_start),
    .done(grp_fu_320_ap_done),
    .din0(row_fu_120),
    .din1(stride_row_read_reg_393),
    .ce(grp_fu_320_ce),
    .dout(grp_fu_320_p2)
);

LinearImageFilter_udiv_32ns_32ns_32_36_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
udiv_32ns_32ns_32_36_seq_1_U31(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_324_ap_start),
    .done(grp_fu_324_ap_done),
    .din0(cols_read_reg_412),
    .din1(stride_col_read_reg_386),
    .ce(grp_fu_324_ce),
    .dout(grp_fu_324_p2)
);

LinearImageFilter_udiv_32ns_32ns_32_36_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
udiv_32ns_32ns_32_36_seq_1_U32(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_328_ap_start),
    .done(grp_fu_328_ap_done),
    .din0(col_reg_202),
    .din1(stride_col_read_reg_386),
    .ce(grp_fu_328_ce),
    .dout(grp_fu_328_p2)
);

LinearImageFilter_udiv_32ns_32ns_8_36_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
udiv_32ns_32ns_8_36_seq_1_U33(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_350_ap_start),
    .done(grp_fu_350_ap_done),
    .din0(grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_sum_1_out),
    .din1(grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_div_1_out),
    .ce(1'b1),
    .dout(grp_fu_350_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_NS_fsm_state4) & (1'b1 == ap_CS_fsm_state3))) begin
            grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_ap_start_reg <= 1'b1;
        end else if ((grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_ap_ready == 1'b1)) begin
            grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln44_fu_315_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
            grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_ap_start_reg <= 1'b1;
        end else if ((grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_ap_ready == 1'b1)) begin
            grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((image_out_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state53))) begin
        col_reg_202 <= col_1_reg_513;
    end else if (((icmp_ln42_fu_305_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        col_reg_202 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        row_fu_120 <= 32'd0;
    end else if (((icmp_ln44_fu_315_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        row_fu_120 <= row_3_fu_338_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        add28_reg_505 <= add28_fu_310_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        col_1_reg_513 <= col_1_fu_333_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        cols_read_reg_412 <= cols;
        half_kernel_dim_reg_451 <= {{kernel_dim[31:1]}};
        image_in_offset_read_reg_429 <= image_in_offset;
        image_out_offset_read_reg_434 <= image_out_offset;
        kernel_dim_read_reg_399 <= kernel_dim;
        kernel_offset_read_reg_406 <= kernel_offset;
        padding_read_reg_381 <= padding;
        rows_read_reg_421 <= rows;
        stride_col_read_reg_386 <= stride_col;
        stride_row_read_reg_393 <= stride_row;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        empty_31_reg_492[31 : 1] <= empty_31_fu_297_p2[31 : 1];
        empty_reg_482[31 : 1] <= empty_fu_287_p2[31 : 1];
        newCol_2_reg_487 <= newCol_2_fu_292_p2;
        newRow_4_reg_477 <= newRow_4_fu_282_p2;
        zext_ln40_reg_472[30 : 0] <= zext_ln40_fu_279_p1[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        image_out_addr_reg_546 <= add_ln69_fu_359_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        mul_ln68_reg_536 <= grp_fu_252_p2;
        udiv_ln69_reg_541 <= grp_fu_350_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        mul_ln7_reg_463 <= grp_fu_248_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        udiv_ln68_1_reg_526 <= grp_fu_324_p2;
        udiv_ln68_2_reg_531 <= grp_fu_328_p2;
        udiv_ln68_reg_521 <= grp_fu_320_p2;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

always @ (*) begin
    if ((image_out_AWREADY == 1'b0)) begin
        ap_ST_fsm_state47_blk = 1'b1;
    end else begin
        ap_ST_fsm_state47_blk = 1'b0;
    end
end

always @ (*) begin
    if ((image_out_WREADY == 1'b0)) begin
        ap_ST_fsm_state48_blk = 1'b1;
    end else begin
        ap_ST_fsm_state48_blk = 1'b0;
    end
end

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

always @ (*) begin
    if ((image_out_BVALID == 1'b0)) begin
        ap_ST_fsm_state53_blk = 1'b1;
    end else begin
        ap_ST_fsm_state53_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_ap_done == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

always @ (*) begin
    if ((grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_ap_done == 1'b0)) begin
        ap_ST_fsm_state9_blk = 1'b1;
    end else begin
        ap_ST_fsm_state9_blk = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln42_fu_305_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln42_fu_305_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_252_ce = grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_grp_fu_252_p_ce;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_252_ce = grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_grp_fu_252_p_ce;
    end else begin
        grp_fu_252_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_252_p0 = grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_grp_fu_252_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_252_p0 = grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_grp_fu_252_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_fu_252_p0 = udiv_ln68_1_reg_526;
    end else begin
        grp_fu_252_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_252_p1 = grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_grp_fu_252_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_252_p1 = grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_grp_fu_252_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_fu_252_p1 = udiv_ln68_reg_521;
    end else begin
        grp_fu_252_p1 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln44_fu_315_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        grp_fu_320_ap_start = 1'b1;
    end else begin
        grp_fu_320_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49))) begin
        grp_fu_320_ce = 1'b0;
    end else begin
        grp_fu_320_ce = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln44_fu_315_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        grp_fu_324_ap_start = 1'b1;
    end else begin
        grp_fu_324_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49))) begin
        grp_fu_324_ce = 1'b0;
    end else begin
        grp_fu_324_ce = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln44_fu_315_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        grp_fu_328_ap_start = 1'b1;
    end else begin
        grp_fu_328_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49))) begin
        grp_fu_328_ce = 1'b0;
    end else begin
        grp_fu_328_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_350_ap_start = 1'b1;
    end else begin
        grp_fu_350_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((icmp_ln44_fu_315_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8)))) begin
        image_in_ARVALID = grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_ARVALID;
    end else begin
        image_in_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((icmp_ln44_fu_315_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8)))) begin
        image_in_RREADY = grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_image_in_RREADY;
    end else begin
        image_in_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((image_out_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state47))) begin
        image_out_AWVALID = 1'b1;
    end else begin
        image_out_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((image_out_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state53))) begin
        image_out_BREADY = 1'b1;
    end else begin
        image_out_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((image_out_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state48))) begin
        image_out_WVALID = 1'b1;
    end else begin
        image_out_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        image_out_blk_n_AW = m_axi_image_out_AWREADY;
    end else begin
        image_out_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        image_out_blk_n_B = m_axi_image_out_BVALID;
    end else begin
        image_out_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        image_out_blk_n_W = m_axi_image_out_WREADY;
    end else begin
        image_out_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((icmp_ln44_fu_315_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8)))) begin
        kernel_ARADDR = grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_ARADDR;
    end else if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        kernel_ARADDR = grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_ARADDR;
    end else begin
        kernel_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((icmp_ln44_fu_315_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8)))) begin
        kernel_ARLEN = grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_ARLEN;
    end else if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        kernel_ARLEN = grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_ARLEN;
    end else begin
        kernel_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((icmp_ln44_fu_315_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8)))) begin
        kernel_ARVALID = grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_ARVALID;
    end else if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        kernel_ARVALID = grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_ARVALID;
    end else begin
        kernel_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((icmp_ln44_fu_315_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8)))) begin
        kernel_RREADY = grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_m_axi_kernel_RREADY;
    end else if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        kernel_RREADY = grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_m_axi_kernel_RREADY;
    end else begin
        kernel_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln42_fu_305_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        m_axi_image_in_cache_flush = 1'b1;
    end else begin
        m_axi_image_in_cache_flush = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln42_fu_305_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        m_axi_kernel_cache_flush = 1'b1;
    end else begin
        m_axi_kernel_cache_flush = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((icmp_ln42_fu_305_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((icmp_ln44_fu_315_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            if (((image_out_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state47))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end
        end
        ap_ST_fsm_state48 : begin
            if (((image_out_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state48))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            if (((image_out_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state53))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add28_fu_310_p2 = (row_fu_120 - zext_ln40_reg_472);

assign add_ln69_1_fu_355_p2 = (mul_ln68_reg_536 + image_out_offset_read_reg_434);

assign add_ln69_fu_359_p2 = (add_ln69_1_fu_355_p2 + udiv_ln68_2_reg_531);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_NS_fsm_state4 = ap_NS_fsm[32'd3];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign col_1_fu_333_p2 = (col_reg_202 + stride_col_read_reg_386);

assign empty_31_fu_297_p2 = cols_read_reg_412 << 32'd1;

assign empty_fu_287_p2 = rows_read_reg_421 << 32'd1;

assign grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_ap_start = grp_LinearImageFilter_Pipeline_ker_cols_sum_ker_rows_sum_fu_214_ap_start_reg;

assign grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_ap_start = grp_LinearImageFilter_Pipeline_ker_rows_ker_cols_fu_224_ap_start_reg;

assign grp_fu_248_p0 = zext_ln7_fu_271_p1;

assign grp_fu_248_p1 = zext_ln7_fu_271_p1;

assign icmp_ln42_fu_305_p2 = ((row_fu_120 < rows_read_reg_421) ? 1'b1 : 1'b0);

assign icmp_ln44_fu_315_p2 = ((col_reg_202 < cols_read_reg_412) ? 1'b1 : 1'b0);

assign image_out_WDATA = udiv_ln69_reg_541[7:0];

assign newCol_2_fu_292_p2 = ($signed(cols_read_reg_412) + $signed(32'd4294967295));

assign newRow_4_fu_282_p2 = ($signed(rows_read_reg_421) + $signed(32'd4294967295));

assign row_3_fu_338_p2 = (row_fu_120 + stride_row_read_reg_393);

assign zext_ln40_fu_279_p1 = half_kernel_dim_reg_451;

assign zext_ln7_fu_271_p1 = kernel_dim_read_reg_399;

always @ (posedge ap_clk) begin
    zext_ln40_reg_472[31] <= 1'b0;
    empty_reg_482[0] <= 1'b0;
    empty_31_reg_492[0] <= 1'b0;
end

endmodule //LinearImageFilter
